MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;; filename: Renard Plus All in one firmware.asm
                      00002 ;; filename: RP32 All in one firmware.asm
                      00003 ;; Orignal filename:    ren16_g2-2009731.asm
                      00004 ;; Copyright (c) 2006,2007,2009 Phil Short
                      00005 ;;
                      00006 ;;  This program is provided free for you to use in any way that you wish,
                      00007 ;;  subject to the laws and regulations where you are using it.  Due diligence
                      00008 ;;  is strongly suggested before using this code.
                      00009 ;;
                      00010 ;;  The Author makes no warranty of any kind, express or implied, with regard
                      00011 ;;  to this program or the documentation contained in this document.  The
                      00012 ;;  Author shall not be liable in any event for incidental or consequential
                      00013 ;;  damages in connection with, or arising out of, the furnishing, performance
                      00014 ;;  or use of these programs.
                      00015 ;;
                      00016 ;;  --------------------------------------------------------------------------
                      00017 ;;
                      00018 ;;  Note: there are some parameters that may be modified by the user.  These
                      00019 ;;    are located just below the list of processors that the firmware is
                      00020 ;;    intended to work with.
                      00021 ;;
                      00022 ;;  4 Jan 2009 PJS Taken as basis for 16-channel version coded up for the
                      00023 ;;     PIC16F722 microcntroller.
                      00024 ;;  11 Jan 2009 PJS Fixed bug so that it now recovers from frame error, added
                      00025 ;;     code for using 16-bit baudrate generator of PIC18 family, added code to
                      00026 ;;     to make the ZC LED to follow the ZC hardware input when that bit is not
                      00027 ;;     toggling (i.e. LED is on when input is open, LED is off when input is
                      00028 ;;     shorted to ground, flashes otherwise with a 5 second (approx) period.
                      00029 ;;  12 Jan 2009 PR Modified scheme for adjusting settings for different CPUs
                      00030 ;;  12 Jan 2009 PJS Fixed settings for PIC18F2221
                      00031 ;;  13 Jan 2009 PJS Removed portions of revision history that related to the
                      00032 ;;     old Renard firmware (PIC16F688-specific).  Added lots of macros to make
                      00033 ;;     it a little easier to re-map the outputs.  These macros will probably
                      00034 ;;     be removed from this file and placed in a separate include file so that
                      00035 ;;     the user doesn't have to re-enter them when a firmware update is issued.
                      00036 ;;  15 Jan 2009 PJS Moved LED from bit 7 of porta to bit 6 of port b, and
                      00037 ;;     tri-stated the former bit.
                      00038 ;;  17 Jan 2009 PJS Fixed problem causing channel 5 to ignore input settings
                      00039 ;;      (and to appear to cyclically dim), and fixed configuration error for
                      00040 ;;      16F722.
                      00041 ;;  28 April 2009 PJS Modified for pinout used on home-etch/SMD  board.  The
                      00042 ;;      VCAP  pin was moved, the LED logic was modified to use only three pins
                      00043 ;;      for four LEDs ('charlie-plexed'), and the triac output pins were moved
                      00044 ;;      around.  Lots  of little modifications to try and make things faster
                      00045 ;;      to compensate for extra charlie-plexing logic in the ISR.
                      00046 ;;  16 May 2009 PJS Split off the local customization file
                      00047 ;;  20 May 2009 PJS Made some fixes for PIC18F family (suggested by pr).
                      00048 ;;  27 May 2010 PJS Fixes for PIC18F family -
                      00049 ;;     - moved code for clearing PIE1, PIE2, and IPEN (previous location of
                      00050 ;;       that code prevented timer2 interrupts from occurring).
                      00051 ;;     - changed a few instances of '0x80' to BANK1 (previous code would access
                      00052 ;;       the wrong addresses).  NOTE that changes to ren16_g2_local.inc is also
                      00053 ;;       required, for the same reason).
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;;  28 may 2010 PR Minor changes to the processor config sections. Added 2620 as
                      00055 ;;       per Mac's (Phoenix) recommendations.
                      00056 ;;  10 Aug 2010 Mac (Phoenix) added PSP Mode for PortE cofig errors.
                      00057 ;;  01 Oct 2010 Mac (Phoenix) changed Clockrate for PIC18F45K22 Device for 64Mhz 
                      00058 ;;      and  Heartbeat location moved, prior to that change back in August 2010
                      00059 ;;      PSP Mode added for PortE cofig errors.;;
                      00060 ;;  06 March 2011 Mac (Phoenix) changed Clockrate to 32Mhz due to poor dimming issues, needed to
                      00061 ;;       remove three status LEDs in order to accommodate 32 channels, there is now only
                      00062 ;;       one status LED that blinks at three different levels of intensities at about every 
                      00063 ;;       three seconds.
                      00064 ;;  22 April 2011 PJS added Start Address code for Ren-W wirelees capabilities
                      00065 ;;  25 April 2011 Mac (Phoenix) added Defines to avoid two sets of code 
                      00066 ;;         for Start Address and non Start Address firmware
                      00067 ;;  05 August 2012 A. Williams (LabRat) added DMX code
                      00068 ;;  10 Oct 2013 A. Williams (LabRat) corrected DMX lag issue
                      00069 ;;  19 Dec 2013 Mac (Phoenix) combined .inc file with .asm files
                      00070 ;;  16 April 2015 Charles Kerr added DMX Lights out function when data signal is lost 
                      00071 ;;     between Controller and sequenced data stream.
                      00072 ;;  22 April 2015 Mac (Phoenix) fixed intermittant loss of dimming control.
                      00073 ;;  10 August 2016 Mac (Phoenix) Merged Renard, Renard Start Addressing, DMX and
                      00074 ;;     added PIC18Fxxk22 PIC onto a single .asm file.
                      00075 ;;
                      00076 ;;  ******* dedicated port assignments ********
                      00077 ;;
                      00078 ;;  PIN 1  (RE0) - zero-crossing (input only)
                      00079 ;;  PIN 25 (RC6/TX) - uart_out (output)
                      00080 ;;  PIN 26 (RC7/RX) - uart_in (input)
                      00081 
                      00082 ;;  Outputs are good to drive 15 mA opto-isolators, except this will probably
                      00083 ;;  overload the VSS/VDD pins on the PIC.  So the current through each output
                      00084 ;;  should be limited to 6 mA (except the LED pins).
                      00085 ;;
                      00086 ;;  This code fits in less than 2K of program space, and takes advantage of
                      00087 ;;  that fact at various places to save a few bytes of code, and so it may
                      00088 ;;  not necessarily work as intended if the code size is increased.
                      00089 ;; 
                      00090 ;;  This code does not make use of automatic baud-rate detection, nor does
                      00091 ;;  it use timer1, the low-power, wake-up, analog comparator or A/D
                      00092 ;;  capabilities of the chip.
                      00093 ;;
                      00094 ;;  The interrupt used by this program is timer2, which is intended to create
                      00095 ;;  a periodic (32 us) clock.  Since the timer is reset inside of the ISR, the
                      00096 ;;  foreground routine should disable interrupts for as short a time as
                      00097 ;;  possible (or not at all, if this can be accomplished).
                      00098 
                      00099  LIST R=DEC
                      00100  
                      00101 ;;
                      00102 ;; {pr}
                      00103 ;; added Define statements for each processor that has been tested
                      00104 ;; The current list is:
                      00105 ;; 16f722   <- best cost
                      00106 ;; 18f2525  <- Most memory for future expansion
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ;; 18f2420  
                      00108 ;;
                      00109 ;; Tested 2012
                      00110 ;; 18f2221  <- Cheapest 18f family. assuming has 16bit uart
                      00111 ;;             Currently has config bit errors as it was a copy of the 2525
                      00112 ;;             settings will check settings once chips arrive
                      00113 
                      00114 ;;  --------------------------------------------------------------------------
                      00115 ;;
                      00116 ;;  You might want to change this line if you need different versions of the
                      00117 ;;    include file for any reason.
                      00118         
                      00119 ;;  This file contains the definitions that the user might reasonably want to
                      00120 ;;  change.  This includes the I/O pin mappings, the baud rate, and some
                      00121 ;;  clock-related items. These files were created by Phil Short, Peter Rogers
                      00122 ;;  and modified to accommodate the Renard Plus Controllers by Mac Macmillan (Phoenix)
                      00123 ;;
                      00124 ;;  2) Processor selection (located as a menu item in the MPLAB IDE).
                      00125 ;;
                      00126 ;;  Hardware mappings
                      00127 ;;  PIN 1  (RE3) - zero-crossing (input only)
                      00128 ;;  PIN 2  (RA0) - triac driver 1 (output)
                      00129 ;;  PIN 3  (RA1) - triac driver 2 (output)
                      00130 ;;  PIN 4  (RA2) - triac driver 3 (output)
                      00131 ;;  PIN 5  (RA3) - triac driver 4 (output)
                      00132 ;;  PIN 6  (RA4) - triac driver 5 (output)
                      00133 ;;  PIN 7  (RA5) - triac driver 6 (output)
                      00134 ;;  PIN 8  (RE0) - triac driver 7 (output)
                      00135 ;;  PIN 9  (RE1) - triac driver 8 (output)
                      00136 ;;  PIN 10 (RE2) - triac driver 9 (output)
                      00137 ;;  PIN 11 (VDD) 
                      00138 ;;  PIN 12 (VSS) 
                      00139 ;;  PIN 13 (RA7) - triac driver 10 (output)
                      00140 ;;  PIN 14 (RA6) - triac driver 11 (output)
                      00141 ;;  PIN 15 (RC0) - triac driver 12 (output)
                      00142 ;;  PIN 16 (RC1) - triac driver 13 (output)
                      00143 ;;  PIN 17 (RC2) - triac driver 14 (output)
                      00144 ;;  PIN 18 (RC3) - triac driver 15 (output)
                      00145 ;;  Pin 19 (RD0) - triac driver 16 (output)
                      00146 ;;  Pin 20 (RD1) - Status LED ZC and HeartBeat, tri pulse beat
                      00147 ;;  PIN 21 (RD2) - triac driver 29 (output)
                      00148 ;;  PIN 22 (RD3) - triac driver 30 (output)
                      00149 ;;  PIN 23 (RC4) - triac driver 31 (output)
                      00150 ;;  PIN 24 (RC5) - triac driver 32 (output)
                      00151 ;;  PIN 25 (RC6/TX) - uart_out (output)
                      00152 ;;  PIN 26 (RC7/RX) - uart_in (input)
                      00153 ;;  PIN 27 (RD4) - triac driver 25 (output)
                      00154 ;;  PIN 28 (RD5) - triac driver 26 (output)
                      00155 ;;  PIN 29 (RD6) - triac driver 27 (output)
                      00156 ;;  PIN 30 (RD7) - triac driver 28 (output)
                      00157 ;;  PIN 31 (VSS)
                      00158 ;;  PIN 32 (VDD)
                      00159 ;;  PIN 33 (RB0) - triac driver 21 (output)
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160 ;;  PIN 34 (RB1) - triac driver 22 (output)
                      00161 ;;  PIN 35 (RB2) - triac driver 23 (output)
                      00162 ;;  PIN 36 (RB3) - triac driver 24 (output)
                      00163 ;;  PIN 37 (RB4) - triac driver 17 (output)
                      00164 ;;  PIN 38 (RB5) - triac driver 18 (output)
                      00165 ;;  PIN 39 (RB6) - triac driver 19 (output)
                      00166 ;;  PIN 40 (RB7) - triac driver 20 (output)
                      00167 
                      00168 
                      00169 ;;  NOTE:
                      00170 ;;
                      00171 ;;  This firmware is configured for PWM use with up to 460800 baud communications.
                      00172 ;;  Here are the DEFINE statements for changing this.
                      00173 ;;
                      00174 ;;  **********User tunable items*********
                      00175 
                      00176 ;;************** DMX MODE ***************
                      00177 ;;#DEFINE DMX  ;; ******uncomment for DMX******
                      00178 #ifdef DMX
                      00179   #DEFINE BAUDRATE 250000
                      00180 
                      00181 ;; Uncomment to hard code the DMX address. Otherwise it will be read
                      00182 ;; from the EEROM locations
                      00183 ;; #DEFINE HARD_CODE_DMX_ADDR  ;;only needed for devices without EEPROM
                      00184 
                      00185   #DEFINE DMX_START_ADDRESS D'001'  ;;change for DMX starting channel in Vixen 1-512
                      00186 ; -- EE Address Mappings --
                      00187   #DEFINE EE_DMX_HIGH           (0x00)  
                      00188   #DEFINE EE_DMX_LOW            (0x01)
                      00189         
                      00190 #else
                      00191 #IFDEF __18F45K22
                      00192 ;;  ******* PIC18F45K22 Selections *******
                      00193 ;; Define Baud Rates. uncomment one of the following Baud Rates
                      00194  #DEFINE BAUDRATE 57600  
                      00195 ;; #DEFINE BAUDRATE 115200  
                      00196 ;; #DEFINE BAUDRATE 230400
                      00197 ;; #DEFINE BAUDRATE 460800  
                      00198 
                      00199 #ELSE
                      00200 ;;  ******* PIC18F45xx Selections ******
                      00201 ;; Define Baud Rates. uncomment one of the following Baud Rates
                      00202  #DEFINE BAUDRATE 57600
                      00203 ;; #DEFINE BAUDRATE 115200
                      00204 ;; #DEFINE BAUDRATE 230400
                      00205 
                      00206 
                      00207 #ENDIF
                      00208 ;;************* Renard/Renard Start Address Mode ******************
                      00209 ;; Start address for channel start configuration on controller
                      00210 ;; also required for Ren-W wireless operation,, max baud rate is 57600
                      00211 
                      00212 ;; #DEFINE START_ADDRESS  ;;******comment this line out for Standard Renard Protocol
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213 
                      00214 ;; #DEFINE START_ADDR 0 ;; 0 starts channels 1-8, see Start Address Chart for
                      00215 ;; Renard Plus or Simple Renards (not the same as SS Renard boards)
                      00216 
                      00217 #endif
                      00218 
                      00219 ;; CTR_LOCKOUT turns all outputs off early if it is > 0.
                      00220 
                      00221  #DEFINE CTR_LOCKOUT 0
                      00222 
                      00223 ;;**************** Internal OSC settings *********************
                      00224 ;;********************* Do Not Change *************************
                      00225 
                      00226 #IFDEF __18F45K22
                      00227 
                      00228 ;; #DEFINE CLOCKRATE 32000000
                      00229  #DEFINE CLOCKRATE 64000000  ;;PIC18F45K22 ONLY
                      00230  
                      00231 #ELSE
                      00232 
                      00233  #DEFINE CLOCKRATE 32000000  ;;PIC18F45xx
                      00234 
                      00235 #ENDIF
                      00236 
                      00237 
                      00238 ;; All PIC18F parts currently require '1<<PLLEN' here.
                      00239 
                      00240  #DEFINE OSC_TUNE_LOCAL 1<<PLLEN ;; {pr} fixed typo
                      00241 
                      00242 ;; I/O bit definitions
                      00243 
                      00244  #DEFINE ZC_BIT   3
                      00245  #DEFINE ZC_REG   PORTE
                      00246  #DEFINE ZC       ZC_REG,(ZC_BIT)
                      00247  #DEFINE ZC_MASK  (1<<(ZC_BIT))
                      00248 
                      00249 ;;******** Do not remove or change ***********
                      00250 #define DMX_BLINK_RATE (44)
                      00251 
                      00252 
                      00253 ;;  Status LED Port D bit 3 only
                      00254 
                      00255  #DEFINE HEARTBEAT_LED_REG  LED_map
                      00256  #DEFINE HEARTBEAT_LED  HEARTBEAT_LED_REG, HEARTBEAT_LED_BIT
                      00257 
                      00258  #DEFINE ZC_LED_BIT 0
                      00259  #DEFINE ZC_LED_REG LED_map
                      00260  #DEFINE ZC_LED ZC_LED_REG,ZC_LED_BIT
                      00261 
                      00262  #DEFINE FRAME_ERR_LED_REG  LED_map
                      00263  #DEFINE FRAME_ERR_LED  FRAME_ERR_LED_REG, FRAME_ERR_LED_BIT
                      00264 
                      00265  #DEFINE RXD_LED_REG LED_map
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266  #DEFINE RXD_LED RXD_LED_REG, RXD_LED_BIT
                      00267 
                      00268 
                      00269 ;;  --------------------------------------------------------------------------
                      00270 ;;  Macros for assigning dimmer input channels to IO pins.
                      00271 ;;
                      00272 ;;  The serial communicationss and zero-crossing pins are pre-assigned, and are
                      00273 ;;    not intended to be easily changed.
                      00274 ;;
                      00275 ;;  This is also where output polarity and PWM vs non-PWM status is assigned.
                      00276 ;;  If the SINK_PORTx_CHy bit is set to '1' the signal will be active low, if
                      00277 ;;    it is set '0' the output signal will be active high.  Similarly, if the
                      00278 ;;    PORTx_CHy bit is set to '1' the output will be a PWM signal, if set
                      00279 ;;    to '0' the output will be just a pulse (although this latter option only
                      00280 ;;    makes sense when driving a TRIAC or SCR).
                      00281 
                      00282 ;;  Note: the pins used for LED output must have the SINK bit in the 'OFF'
                      00283 ;;    state and the PWM pin in the 'ON' state.
                      00284 
                      00285 #IFNDEF YES
                      00286   #DEFINE YES 1
                      00287 #ENDIF
                      00288 #IFNDEF NO
                      00289   #DEFINE NO 0
                      00290 #ENDIF
                      00291 
                      00292 ;;**************************************************************************
                      00293 ;;************ AC INCANDESCENT/LED OR DC LED LIGHT DEFINITIONS *************
                      00294 ;;**************************************************************************
                      00295 
                      00296 #DEFINE TRIAC_OR_SSR_LIGHTS  ;;used for Triac/SSR driven Icandescent or AC LED lights, AC Power
                      00297 ;;#DEFINE DC_LED_LIGHTS  ;;mostly used for ULN2803AN Darlington LED Drivers, DC power
                      00298 
                      00299 
                      00300 #IFDEF TRIAC_OR_SSR_LIGHTS  ;;used for Triac/SSR driven Icandescent or LED lights, AC Power
                      00301         
                      00302 ;;  PortA, bit 0 has channel 1 mapped to it
                      00303   #DEFINE PIN2_CH 1
                      00304   #DEFINE PIN2_SINK YES
                      00305   #DEFINE PIN2_PWM YES
                      00306 
                      00307 ;;  PortA, bit 1 has channel 2 mapped to it
                      00308   #DEFINE PIN3_CH 2
                      00309   #DEFINE PIN3_SINK YES
                      00310   #DEFINE PIN3_PWM YES
                      00311 
                      00312 ;;  PortA, bit 2 has channel 3 mapped to it
                      00313   #DEFINE PIN4_CH 3
                      00314   #DEFINE PIN4_SINK YES
                      00315   #DEFINE PIN4_PWM YES
                      00316 
                      00317 ;;  PortA, bit 3 has channel 4 mapped to it
                      00318   #DEFINE PIN5_CH 4
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00319   #DEFINE PIN5_SINK YES
                      00320   #DEFINE PIN5_PWM YES
                      00321 
                      00322 ;;  PortA, bit 4 has channel 5 mapped to it
                      00323   #DEFINE PIN6_CH 5
                      00324   #DEFINE PIN6_SINK YES
                      00325   #DEFINE PIN6_PWM YES
                      00326 
                      00327 ;;  PortA, bit 5 has channel 6 mapped to it
                      00328   #DEFINE PIN7_CH 6
                      00329   #DEFINE PIN7_SINK YES
                      00330   #DEFINE PIN7_PWM YES
                      00331 
                      00332 ;;  PortA, bit 7 has channel 10 mapped to it
                      00333   #DEFINE PIN13_CH 10
                      00334   #DEFINE PIN13_SINK YES
                      00335   #DEFINE PIN13_PWM YES
                      00336 
                      00337 ;;  PortA, bit 6 has channel 11 mapped to it
                      00338   #DEFINE PIN14_CH 11
                      00339   #DEFINE PIN14_SINK YES
                      00340   #DEFINE PIN14_PWM YES
                      00341 ;; ---------------------------- PORT B mapping -------------------------------
                      00342 
                      00343 ;;  PortB, bit 0 has channel 21 mapped to it
                      00344   #DEFINE PIN33_CH 21
                      00345   #DEFINE PIN33_SINK YES
                      00346   #DEFINE PIN33_PWM YES
                      00347 
                      00348 ;;  PortB, bit 1 has channel 22 mapped to it
                      00349   #DEFINE PIN34_CH 22
                      00350   #DEFINE PIN34_SINK YES
                      00351   #DEFINE PIN34_PWM YES
                      00352 
                      00353 ;;  PortB, bit 2 has channel 23 mapped to it
                      00354   #DEFINE PIN35_CH 23
                      00355   #DEFINE PIN35_SINK YES
                      00356   #DEFINE PIN35_PWM YES
                      00357 
                      00358 ;;  PortB, bit 3 has channel 24 mapped to it
                      00359   #DEFINE PIN36_CH 24
                      00360   #DEFINE PIN36_SINK YES
                      00361   #DEFINE PIN36_PWM YES
                      00362 
                      00363 ;;  PortB, bit 4 has channel 17 mapped to it
                      00364   #DEFINE PIN37_CH 17
                      00365   #DEFINE PIN37_SINK YES
                      00366   #DEFINE PIN37_PWM YES
                      00367 
                      00368 ;;  PortB, bit 5 has channel 18 mapped to it
                      00369   #DEFINE PIN38_CH 18
                      00370   #DEFINE PIN38_SINK YES
                      00371   #DEFINE PIN38_PWM YES
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00372 
                      00373 ;;  PortB, bit 6 has channel 19 mapped to it
                      00374   #DEFINE PIN39_CH 19
                      00375   #DEFINE PIN39_SINK YES
                      00376   #DEFINE PIN39_PWM YES
                      00377 
                      00378 ;;  PortB, bit 7 has channel 20 mapped to it
                      00379   #DEFINE PIN40_CH 20
                      00380   #DEFINE PIN40_SINK YES
                      00381   #DEFINE PIN40_PWM YES
                      00382 
                      00383 ;; ---------------------------- PORT C mapping -------------------------------
                      00384 
                      00385 ;;  PortC, bit 0 has channel 12 mapped to it
                      00386   #DEFINE PIN15_CH 12
                      00387   #DEFINE PIN15_SINK YES
                      00388   #DEFINE PIN15_PWM YES
                      00389 
                      00390 ;;  PortC, bit 1 has channel 13 mapped to it
                      00391   #DEFINE PIN16_CH 13
                      00392   #DEFINE PIN16_SINK YES
                      00393   #DEFINE PIN16_PWM YES
                      00394 
                      00395 ;;  PortC, bit 2 has channel 14 mapped to it
                      00396   #DEFINE PIN17_CH 14
                      00397   #DEFINE PIN17_SINK YES
                      00398   #DEFINE PIN17_PWM YES
                      00399 
                      00400 ;;  PortC, bit 3 has channel 15 mapped to it
                      00401   #DEFINE PIN18_CH 15
                      00402   #DEFINE PIN18_SINK YES
                      00403   #DEFINE PIN18_PWM YES
                      00404 
                      00405 ;;  PortC, bit 4 has channel 31 mapped to it
                      00406   #DEFINE PIN23_CH 31
                      00407   #DEFINE PIN23_SINK YES
                      00408   #DEFINE PIN23_PWM YES
                      00409 
                      00410 ;;  PortC, bit 5 has channel 32 mapped to it
                      00411   #DEFINE PIN24_CH 32
                      00412   #DEFINE PIN24_SINK YES
                      00413   #DEFINE PIN24_PWM YES
                      00414 
                      00415 ;;  PortC, bits 6 and 7 are used for serial (UART) I/O
                      00416   #DEFINE PIN25_SINK NO  ;;TX UART
                      00417   #DEFINE PIN26_SINK NO  ;;RX UART
                      00418 
                      00419 ;; ---------------------------- PORT D mapping -------------------------------
                      00420 
                      00421 ;;  PortD, bit 0 has channel 16 mapped to it
                      00422   #DEFINE PIN19_CH 16
                      00423   #DEFINE PIN19_SINK YES
                      00424   #DEFINE PIN19_PWM YES
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00425 
                      00426 ;;  PortD, bit 3 has channel 30 mapped to it
                      00427   #DEFINE PIN22_CH 30
                      00428   #DEFINE PIN22_SINK YES
                      00429   #DEFINE PIN22_PWM YES
                      00430 
                      00431 ;;  PortD, bit 2 has channel 29 mapped to it
                      00432   #DEFINE PIN21_CH 29
                      00433   #DEFINE PIN21_SINK YES
                      00434   #DEFINE PIN21_PWM YES
                      00435 
                      00436 ;;  PortD, bit 1 has LED driver mapped to it
                      00437   #DEFINE PIN20_SINK NO
                      00438   #DEFINE PIN20_PWM YES
                      00439   #DEFINE LED2_TRIS TRISD,1
                      00440   #DEFINE LED2_anode_sel portd_image,1
                      00441 
                      00442 ;;  PortD, bit 4 has channel 25 mapped to it
                      00443   #DEFINE PIN27_CH 25
                      00444   #DEFINE PIN27_SINK YES
                      00445   #DEFINE PIN27_PWM YES
                      00446 
                      00447 ;;  PortD, bit 5 has channel 26 mapped to it
                      00448   #DEFINE PIN28_CH 26
                      00449   #DEFINE PIN28_SINK YES
                      00450   #DEFINE PIN28_PWM YES
                      00451 
                      00452 ;;  PortD, bit 6 has channel 27 mapped to it
                      00453   #DEFINE PIN29_CH 27
                      00454   #DEFINE PIN29_SINK YES
                      00455   #DEFINE PIN29_PWM YES
                      00456 
                      00457 ;;  PortD, bit 7 has channel 28 mapped to it
                      00458   #DEFINE PIN30_CH 28
                      00459   #DEFINE PIN30_SINK YES
                      00460   #DEFINE PIN30_PWM YES
                      00461 
                      00462 ;; ---------------------------- PORT E mapping -------------------------------
                      00463 
                      00464 ;;  PortE, bit 0 has channel 7 mapped to it
                      00465   #DEFINE PIN8_CH 7
                      00466   #DEFINE PIN8_SINK YES
                      00467   #DEFINE PIN8_PWM YES
                      00468 
                      00469 ;;  PortE, bit 1 has channel 8 mapped to it
                      00470   #DEFINE PIN9_CH 8
                      00471   #DEFINE PIN9_SINK YES
                      00472   #DEFINE PIN9_PWM YES
                      00473 
                      00474 ;;  PortE, bit 2 has channel 9 mapped to it
                      00475   #DEFINE PIN10_CH 9
                      00476   #DEFINE PIN10_SINK YES
                      00477   #DEFINE PIN10_PWM YES
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00478 
                      00479 #ENDIF
                      00480 ;;************************************************************************
                      00481 ;;************************ DC LED LIGHT DEFINITIONS **********************
                      00482 ;;************************************************************************
                      00483 #IFDEF DC_LED_LIGHTS  ;;mostly used for ULN2803AN Darlington LED Drivers, DC power
                      00484 
                      00485 ;;  PortA, bit 0 has channel 1 mapped to it
                      00486   #DEFINE PIN2_CH 1
                      00487   #DEFINE PIN2_SINK NO
                      00488   #DEFINE PIN2_PWM YES
                      00489 
                      00490 ;;  PortA, bit 1 has channel 2 mapped to it
                      00491   #DEFINE PIN3_CH 2
                      00492   #DEFINE PIN3_SINK NO
                      00493   #DEFINE PIN3_PWM YES
                      00494 
                      00495 ;;  PortA, bit 2 has channel 3 mapped to it
                      00496   #DEFINE PIN4_CH 3
                      00497   #DEFINE PIN4_SINK NO
                      00498   #DEFINE PIN4_PWM YES
                      00499 
                      00500 ;;  PortA, bit 3 has channel 4 mapped to it
                      00501   #DEFINE PIN5_CH 4
                      00502   #DEFINE PIN5_SINK NO
                      00503   #DEFINE PIN5_PWM YES
                      00504 
                      00505 ;;  PortA, bit 4 has channel 5 mapped to it
                      00506   #DEFINE PIN6_CH 5
                      00507   #DEFINE PIN6_SINK NO
                      00508   #DEFINE PIN6_PWM YES
                      00509 
                      00510 ;;  PortA, bit 5 has channel 6 mapped to it
                      00511   #DEFINE PIN7_CH 6
                      00512   #DEFINE PIN7_SINK NO
                      00513   #DEFINE PIN7_PWM YES
                      00514 
                      00515 ;;  PortA, bit 7 has channel 10 mapped to it
                      00516   #DEFINE PIN13_CH 10
                      00517   #DEFINE PIN13_SINK NO
                      00518   #DEFINE PIN13_PWM YES
                      00519 
                      00520 ;;  PortA, bit 6 has channel 11 mapped to it
                      00521   #DEFINE PIN14_CH 11
                      00522   #DEFINE PIN14_SINK NO
                      00523   #DEFINE PIN14_PWM YES
                      00524 ;; ---------------------------- PORT B mapping -------------------------------
                      00525 
                      00526 ;;  PortB, bit 0 has channel 21 mapped to it
                      00527   #DEFINE PIN33_CH 21
                      00528   #DEFINE PIN33_SINK NO
                      00529   #DEFINE PIN33_PWM YES
                      00530 
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00531 ;;  PortB, bit 1 has channel 22 mapped to it
                      00532   #DEFINE PIN34_CH 22
                      00533   #DEFINE PIN34_SINK NO
                      00534   #DEFINE PIN34_PWM YES
                      00535 
                      00536 ;;  PortB, bit 2 has channel 23 mapped to it
                      00537   #DEFINE PIN35_CH 23
                      00538   #DEFINE PIN35_SINK NO
                      00539   #DEFINE PIN35_PWM YES
                      00540 
                      00541 ;;  PortB, bit 3 has channel 24 mapped to it
                      00542   #DEFINE PIN36_CH 24
                      00543   #DEFINE PIN36_SINK NO
                      00544   #DEFINE PIN36_PWM YES
                      00545 
                      00546 ;;  PortB, bit 4 has channel 17 mapped to it
                      00547   #DEFINE PIN37_CH 17
                      00548   #DEFINE PIN37_SINK NO
                      00549   #DEFINE PIN37_PWM YES
                      00550 
                      00551 ;;  PortB, bit 5 has channel 18 mapped to it
                      00552   #DEFINE PIN38_CH 18
                      00553   #DEFINE PIN38_SINK NO
                      00554   #DEFINE PIN38_PWM YES
                      00555 
                      00556 ;;  PortB, bit 6 has channel 13 mapped to it
                      00557   #DEFINE PIN39_CH 19
                      00558   #DEFINE PIN39_SINK NO
                      00559   #DEFINE PIN39_PWM YES
                      00560 
                      00561 ;;  PortB, bit 7 has channel 20 mapped to it
                      00562   #DEFINE PIN40_CH 20
                      00563   #DEFINE PIN40_SINK NO
                      00564   #DEFINE PIN40_PWM YES
                      00565 
                      00566 ;; ---------------------------- PORT C mapping -------------------------------
                      00567 
                      00568 ;;  PortC, bit 0 has channel 12 mapped to it
                      00569   #DEFINE PIN15_CH 12
                      00570   #DEFINE PIN15_SINK NO
                      00571   #DEFINE PIN15_PWM YES
                      00572 
                      00573 ;;  PortC, bit 1 has channel 13 mapped to it
                      00574   #DEFINE PIN16_CH 13
                      00575   #DEFINE PIN16_SINK NO
                      00576   #DEFINE PIN16_PWM YES
                      00577 
                      00578 ;;  PortC, bit 2 has channel 14 mapped to it
                      00579   #DEFINE PIN17_CH 14
                      00580   #DEFINE PIN17_SINK NO
                      00581   #DEFINE PIN17_PWM YES
                      00582 
                      00583 ;;  PortC, bit 3 has channel 15 mapped to it
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00584   #DEFINE PIN18_CH 15
                      00585   #DEFINE PIN18_SINK NO
                      00586   #DEFINE PIN18_PWM YES
                      00587 
                      00588 ;;  PortC, bit 4 has channel 31 mapped to it
                      00589   #DEFINE PIN23_CH 31
                      00590   #DEFINE PIN23_SINK NO
                      00591   #DEFINE PIN23_PWM YES
                      00592 
                      00593 ;;  PortC, bit 5 has channel 32 mapped to it
                      00594   #DEFINE PIN24_CH 32
                      00595   #DEFINE PIN24_SINK NO
                      00596   #DEFINE PIN24_PWM YES
                      00597 
                      00598 ;;  PortC, bits 6 and 7 are used for serial (UART) I/O
                      00599   #DEFINE PIN25_SINK NO  ;;TX UART
                      00600   #DEFINE PIN26_SINK NO  ;;RX UART
                      00601 
                      00602 ;; ---------------------------- PORT D mapping -------------------------------
                      00603 
                      00604 ;;  PortD, bit 0 has channel 16 mapped to it
                      00605   #DEFINE PIN19_CH 16
                      00606   #DEFINE PIN19_SINK NO
                      00607   #DEFINE PIN19_PWM YES
                      00608 
                      00609 ;;  PortD, bit 3 has channel 30 mapped to it
                      00610   #DEFINE PIN22_CH 30
                      00611   #DEFINE PIN22_SINK NO
                      00612   #DEFINE PIN22_PWM YES
                      00613 
                      00614 ;;  PortD, bit 2 has channel 29 mapped to it
                      00615   #DEFINE PIN21_CH 29
                      00616   #DEFINE PIN21_SINK NO
                      00617   #DEFINE PIN21_PWM YES
                      00618 
                      00619 ;;  PortD, bit 1 has LED driver mapped to it
                      00620   #DEFINE PIN20_SINK NO
                      00621   #DEFINE PIN20_PWM YES
                      00622   #DEFINE LED2_TRIS TRISD,1
                      00623   #DEFINE LED2_anode_sel portd_image,1
                      00624 
                      00625 ;;  PortD, bit 4 has channel 25 mapped to it
                      00626   #DEFINE PIN27_CH 25
                      00627   #DEFINE PIN27_SINK NO
                      00628   #DEFINE PIN27_PWM YES
                      00629 
                      00630 ;;  PortD, bit 5 has channel 26 mapped to it
                      00631   #DEFINE PIN28_CH 26
                      00632   #DEFINE PIN28_SINK NO
                      00633   #DEFINE PIN28_PWM YES
                      00634 
                      00635 ;;  PortD, bit 6 has channel 27 mapped to it
                      00636   #DEFINE PIN29_CH 27
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00637   #DEFINE PIN29_SINK NO
                      00638   #DEFINE PIN29_PWM YES
                      00639 
                      00640 ;;  PortD, bit 7 has channel 28 mapped to it
                      00641   #DEFINE PIN30_CH 28
                      00642   #DEFINE PIN30_SINK NO
                      00643   #DEFINE PIN30_PWM YES
                      00644 
                      00645 ;; ---------------------------- PORT E mapping -------------------------------
                      00646 
                      00647 ;;  PortE, bit 0 has channel 7 mapped to it
                      00648   #DEFINE PIN8_CH 7
                      00649   #DEFINE PIN8_SINK NO
                      00650   #DEFINE PIN8_PWM YES
                      00651 
                      00652 ;;  PortE, bit 1 has channel 8 mapped to it
                      00653   #DEFINE PIN9_CH 8
                      00654   #DEFINE PIN9_SINK NO
                      00655   #DEFINE PIN9_PWM YES
                      00656 
                      00657 ;;  PortE, bit 2 has channel 9 mapped to it
                      00658   #DEFINE PIN10_CH 9
                      00659   #DEFINE PIN10_SINK NO
                      00660   #DEFINE PIN10_PWM YES
                      00661 
                      00662   #ENDIF        
                      00663 
                      00664         
                      00665 
                      00666 ;; ----------------------------------------------------------------------------
                      00667 ;; The following definitions probably won't need to be changed by the user.
                      00668 
                      00669   #IFDEF PIN2_CH
                      00670     #DEFINE PIN2_DIMMER (1<<0)
                      00671   #ELSE
                      00672     #DEFINE PIN2_DIMMER 0
                      00673   #ENDIF
                      00674   #IFDEF PIN3_CH
                      00675     #DEFINE PIN3_DIMMER (1<<1)
                      00676   #ELSE
                      00677     #DEFINE PIN3_DIMMER 0
                      00678   #ENDIF
                      00679   #IFDEF PIN4_CH
                      00680     #DEFINE PIN4_DIMMER (1<<2)
                      00681   #ELSE
                      00682     #DEFINE PIN4_DIMMER 0
                      00683   #ENDIF
                      00684   #IFDEF PIN5_CH
                      00685     #DEFINE PIN5_DIMMER (1<<3)
                      00686   #ELSE
                      00687     #DEFINE PIN5_DIMMER 0
                      00688   #ENDIF
                      00689   #IFDEF PIN6_CH
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00690     #DEFINE PIN6_DIMMER (1<<4)
                      00691   #ELSE
                      00692     #DEFINE PIN6_DIMMER 0
                      00693   #ENDIF
                      00694   #IFDEF PIN7_CH
                      00695     #DEFINE PIN7_DIMMER (1<<5)
                      00696   #ELSE
                      00697     #DEFINE PIN7_DIMMER 0
                      00698   #ENDIF
                      00699   #IFDEF PIN14_CH
                      00700     #DEFINE PIN14_DIMMER (1<<6)
                      00701   #ELSE
                      00702     #DEFINE PIN14_DIMMER 0
                      00703   #ENDIF
                      00704   #IFDEF PIN13_CH
                      00705     #DEFINE PIN13_DIMMER (1<<7)
                      00706   #ELSE
                      00707     #DEFINE PIN13_DIMMER 0
                      00708   #ENDIF
                      00709         
                      00710   #IFDEF PIN33_CH
                      00711     #DEFINE PIN33_DIMMER (1<<0)
                      00712   #ELSE
                      00713     #DEFINE PIN33_DIMMER 0
                      00714   #ENDIF
                      00715   #IFDEF PIN34_CH
                      00716     #DEFINE PIN34_DIMMER (1<<1)
                      00717   #ELSE
                      00718     #DEFINE PIN34_DIMMER 0
                      00719   #ENDIF
                      00720   #IFDEF PIN35_CH
                      00721     #DEFINE PIN35_DIMMER (1<<2)
                      00722   #ELSE
                      00723     #DEFINE PIN35_DIMMER 0
                      00724   #ENDIF
                      00725   #IFDEF PIN36_CH
                      00726     #DEFINE PIN36_DIMMER (1<<3)
                      00727   #ELSE
                      00728     #DEFINE PIN36_DIMMER 0
                      00729   #ENDIF
                      00730   #IFDEF PIN37_CH
                      00731     #DEFINE PIN37_DIMMER (1<<4)
                      00732   #ELSE
                      00733     #DEFINE PIN37_DIMMER 0
                      00734   #ENDIF
                      00735   #IFDEF PIN38_CH
                      00736     #DEFINE PIN38_DIMMER (1<<5)
                      00737   #ELSE
                      00738     #DEFINE PIN38_DIMMER 0
                      00739   #ENDIF
                      00740   #IFDEF PIN39_CH
                      00741     #DEFINE PIN39_DIMMER (1<<6)
                      00742   #ELSE
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00743     #DEFINE PIN39_DIMMER 0
                      00744   #ENDIF
                      00745   #IFDEF PIN40_CH
                      00746     #DEFINE PIN40_DIMMER (1<<7)
                      00747   #ELSE
                      00748     #DEFINE PIN40_DIMMER 0
                      00749   #ENDIF        
                      00750 
                      00751   #IFDEF PIN15_CH
                      00752     #DEFINE PIN15_DIMMER (1<<0)
                      00753   #ELSE
                      00754     #DEFINE PIN15_DIMMER 0
                      00755   #ENDIF
                      00756   #IFDEF PIN16_CH
                      00757     #DEFINE PIN16_DIMMER (1<<1)
                      00758   #ELSE
                      00759     #DEFINE PIN16_DIMMER 0
                      00760   #ENDIF
                      00761   #IFDEF PIN17_CH
                      00762     #DEFINE PIN17_DIMMER (1<<2)
                      00763   #ELSE
                      00764     #DEFINE PIN17_DIMMER 0
                      00765   #ENDIF
                      00766   #IFDEF PIN18_CH
                      00767     #DEFINE PIN18_DIMMER (1<<3)
                      00768   #ELSE
                      00769     #DEFINE PIN18_DIMMER 0
                      00770   #ENDIF
                      00771   #IFDEF PIN23_CH
                      00772     #DEFINE PIN23_DIMMER (1<<4)  
                      00773   #ELSE
                      00774     #DEFINE PIN23_DIMMER 0
                      00775   #ENDIF
                      00776   #IFDEF PIN24_CH
                      00777     #DEFINE PIN24_DIMMER (1<<5)  
                      00778   #ELSE
                      00779     #DEFINE PIN24_DIMMER 0
                      00780   #ENDIF
                      00781   #IFDEF PIN25_CH
                      00782     #DEFINE PIN25_DIMMER (1<<6)
                      00783   #ELSE
                      00784     #DEFINE PIN25_DIMMER 0
                      00785   #ENDIF
                      00786   #IFDEF PIN26_CH
                      00787     #DEFINE PIN26_DIMMER (1<<7)
                      00788   #ELSE
                      00789     #DEFINE PIN26_DIMMER 0
                      00790   #ENDIF
                      00791 
                      00792   #IFDEF PIN19_CH
                      00793     #DEFINE PIN19_DIMMER (1<<0)
                      00794   #ELSE
                      00795     #DEFINE PIN19_DIMMER 0
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00796   #ENDIF
                      00797   #IFDEF PIN20_CH
                      00798     #DEFINE PIN20_DIMMER (1<<1)
                      00799   #ELSE
                      00800     #DEFINE PIN20_DIMMER 0
                      00801   #ENDIF
                      00802   #IFDEF PIN21_CH
                      00803     #DEFINE PIN21_DIMMER (1<<2)
                      00804   #ELSE
                      00805     #DEFINE PIN21_DIMMER 0
                      00806   #ENDIF
                      00807   #IFDEF PIN22_CH
                      00808     #DEFINE PIN22_DIMMER (1<<3)  
                      00809   #ELSE
                      00810     #DEFINE PIN22_DIMMER 0
                      00811   #ENDIF
                      00812   #IFDEF PIN27_CH
                      00813     #DEFINE PIN27_DIMMER (1<<4)
                      00814   #ELSE
                      00815     #DEFINE PIN27_DIMMER 0
                      00816   #ENDIF
                      00817   #IFDEF PIN28_CH
                      00818     #DEFINE PIN28_DIMMER (1<<5)
                      00819   #ELSE
                      00820     #DEFINE PIN28_DIMMER 0
                      00821   #ENDIF
                      00822   #IFDEF PIN29_CH
                      00823     #DEFINE PIN29_DIMMER (1<<6)
                      00824   #ELSE
                      00825     #DEFINE PIN29_DIMMER 0
                      00826   #ENDIF
                      00827   #IFDEF PIN30_CH
                      00828     #DEFINE PIN30_DIMMER (1<<7)
                      00829   #ELSE
                      00830     #DEFINE PIN30_DIMMER 0
                      00831   #ENDIF
                      00832 
                      00833   #IFDEF PIN8_CH
                      00834     #DEFINE PIN8_DIMMER (1<<0)
                      00835   #ELSE
                      00836     #DEFINE PIN8_DIMMER 0
                      00837   #ENDIF
                      00838   #IFDEF PIN9_CH
                      00839     #DEFINE PIN9_DIMMER (1<<1)
                      00840   #ELSE
                      00841     #DEFINE PIN9_DIMMER 0
                      00842   #ENDIF
                      00843   #IFDEF PIN10_CH
                      00844     #DEFINE PIN10_DIMMER (1<<2)
                      00845   #ELSE
                      00846     #DEFINE PIN10_DIMMER 0
                      00847   #ENDIF
                      00848 
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00849 
                      00850 ;; ----- Port A
                      00851 
                      00852   #DEFINE DIMMER_BITMAP_PORTA (PIN2_DIMMER | PIN3_DIMMER | PIN4_DIMMER | PIN5_DIMMER | PIN6_DIMMER | PIN
                            7_DIMMER | PIN14_DIMMER | PIN13_DIMMER)
                      00853 
                      00854   #DEFINE SINK_MAP_PORTA (((((((PIN14_SINK * 2 + PIN13_SINK) * 2 + PIN7_SINK) * 2 + PIN6_SINK) * 2 + PIN
                            5_SINK) * 2 + PIN4_SINK) * 2 + PIN3_SINK) * 2 + PIN2_SINK)
                      00855 
                      00856   #DEFINE PWM_MAP_PORTA ((((((((PIN14_PWM*2+PIN13_PWM)*2+PIN7_PWM)*2+PIN6_PWM)*2+PIN5_PWM)*2+PIN4_PWM)*2
                            +PIN3_PWM)*2+PIN2_PWM))
                      00857 
                      00858 ;; ----- Port B
                      00859         
                      00860   #DEFINE DIMMER_BITMAP_PORTB (PIN33_DIMMER | PIN34_DIMMER | PIN35_DIMMER | PIN36_DIMMER | PIN37_DIMMER 
                            | PIN38_DIMMER | PIN39_DIMMER | PIN40_DIMMER)
                      00861 
                      00862   #DEFINE SINK_MAP_PORTB (((((((PIN40_SINK * 2 + PIN39_SINK) * 2 + PIN38_SINK) * 2 + PIN37_SINK) * 2 + P
                            IN36_SINK) * 2 + PIN35_SINK) * 2 + PIN34_SINK) * 2 + PIN33_SINK)
                      00863 
                      00864   #DEFINE PWM_MAP_PORTB ((((((((PIN40_PWM*2+PIN39_PWM)*2+PIN38_PWM)*2+PIN37_PWM)*2+PIN36_PWM)*2+PIN35_PW
                            M)*2+PIN34_PWM)*2+PIN33_PWM))
                      00865 
                      00866 ;; ----- Port C
                      00867         
                      00868   #DEFINE DIMMER_BITMAP_PORTC (PIN15_DIMMER | PIN16_DIMMER | PIN17_DIMMER | PIN18_DIMMER | PIN23_DIMMER 
                            | PIN24_DIMMER | PIN25_DIMMER | PIN26_DIMMER)
                      00869 
                      00870   #DEFINE SINK_MAP_PORTC (((((((PIN26_SINK * 2 + PIN25_SINK) * 2 + PIN24_SINK) * 2 + PIN23_SINK) * 2 + P
                            IN18_SINK) * 2 + PIN17_SINK) * 2 + PIN16_SINK) * 2 + PIN15_SINK)
                      00871 
                      00872   #DEFINE PWM_MAP_PORTC ((((((PIN24_PWM*2+PIN23_PWM)*2+PIN18_PWM)*2+PIN17_PWM)*2+PIN16_PWM)*2+PIN15_PWM)
                            )
                      00873 
                      00874 ;; ----- Port D
                      00875 
                      00876   #DEFINE DIMMER_BITMAP_PORTD (PIN19_DIMMER | PIN20_DIMMER | PIN21_DIMMER | PIN22_DIMMER | PIN27_DIMMER 
                            | PIN28_DIMMER | PIN29_DIMMER | PIN30_DIMMER)
                      00877 
                      00878   #DEFINE SINK_MAP_PORTD (((((((PIN30_SINK * 2 + PIN29_SINK) * 2 + PIN28_SINK) * 2 + PIN27_SINK) * 2 + P
                            IN22_SINK) * 2 + PIN21_SINK) * 2 + PIN20_SINK) * 2 + PIN19_SINK)
                      00879 
                      00880   #DEFINE PWM_MAP_PORTD ((((((((PIN30_PWM*2+PIN29_PWM)*2+PIN28_PWM)*2+PIN27_PWM)*2+PIN22_PWM)*2+PIN21_PW
                            M)*2+PIN20_PWM)*2+PIN19_PWM)) 
                      00881 
                      00882 ;; ----- Port E
                      00883 
                      00884   #DEFINE DIMMER_BITMAP_PORTE (PIN8_DIMMER | PIN9_DIMMER | PIN10_DIMMER) 
                      00885 
                      00886   #DEFINE SINK_MAP_PORTE ((PIN10_SINK * 2 + PIN9_SINK) * 2 + PIN8_SINK) 
                      00887 
                      00888   #DEFINE PWM_MAP_PORTE (((PIN10_PWM*2+PIN9_PWM)*2+PIN8_PWM))
                      00889         
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00890         
                      00891 ;; Processor Configuration Directives - specific to each processor.  The actual
                      00892 ;;   processor is selected in the MPLAB IDE Configuration menu item.  The
                      00893 ;;   symbol 'OSC_CONTROL_LOCAL' is defined in ren16_local.inc.
                      00894         
                      00895 
                      00896  #IFDEF __18F45K22
                      00897 
                      00898  INCLUDE "p18f45K22.inc"
                      00899  #DEFINE PIC18_FAMILY
                      00900 
                      00901  #define OSC_CONTROL_LOCAL 0x60  ;;64MHZ 
                      00902 ;; #define OSC_CONTROL_LOCAL 0x70  ;;64MHZ 
                      00903 
                      00904 
                      00905         CONFIG PRICLKEN=ON, FCMEN=OFF,IESO=OFF,PLLCFG=ON, FOSC=INTIO67 
                      00906 ;; wdt off, brownout is on and set for second highest voltage (hardware only)
                      00907         CONFIG PWRTEN=ON, BOREN=NOSLP, BORV=285
                      00908 
                      00909         CONFIG WDTEN=OFF,WDTPS=1
                      00910 ;; mclre disabled, timer1 cfg fow low power, portb pins are digital, ccp2 mux
                      00911         CONFIG MCLRE=INTMCLR,PBADEN=OFF,CCP2MX=PORTC1
                      00912 
                      00913 ;; debug, extended_instruction, low-voltage programming and reset_stack_err clr
                      00914         CONFIG DEBUG=OFF,XINST=OFF,LVP=OFF,STVREN=ON,HFOFST=OFF
                      00915 
                      00916 ;; code protect some blocks (program memory and eeprom)
                      00917         CONFIG CP0=OFF,CP1=OFF
                      00918         CONFIG CPB=OFF,CPD=OFF
                      00919 
                      00920 ;; write protect some blocks (program memory and eeprom)
                      00921         CONFIG WRT0=OFF,WRT1=OFF
                      00922         CONFIG WRTB=OFF,WRTC=OFF,WRTD=OFF
                      00923 
                      00924 ;; following two words protect the various program code blocks from table reads
                      00925         CONFIG EBTR0=OFF,EBTR1=OFF
                      00926         CONFIG EBTRB=OFF
                      00927 
                      00928  #ENDIF
                      00929 
                      00930 
                      00931  #IFDEF __18F46K20
                      00932 
                      00933  INCLUDE "p18f46K20.inc"
                      00934  #DEFINE PIC18_FAMILY
                      00935 
                      00936  #define OSC_CONTROL_LOCAL 0x60  ;;64MHZ 
                      00937 ;; #define OSC_CONTROL_LOCAL 0x70  ;;64MHZ 
                      00938 
                      00939 
                      00940         CONFIG PRICLKEN=ON, FCMEN=OFF,IESO=OFF,PLLCFG=ON, FOSC=INTIO67 
                      00941 ;; wdt off, brownout is on and set for second highest voltage (hardware only)
                      00942         CONFIG PWRTEN=ON, BOREN=NOSLP, BORV=285
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00943 
                      00944         CONFIG WDTEN=OFF,WDTPS=1
                      00945 ;; mclre disabled, timer1 cfg fow low power, portb pins are digital, ccp2 mux
                      00946         CONFIG MCLRE=INTMCLR,PBADEN=OFF,CCP2MX=PORTC1
                      00947 
                      00948 ;; debug, extended_instruction, low-voltage programming and reset_stack_err clr
                      00949         CONFIG DEBUG=OFF,XINST=OFF,LVP=OFF,STVREN=ON,HFOFST=OFF
                      00950 
                      00951 ;; code protect some blocks (program memory and eeprom)
                      00952         CONFIG CP0=OFF,CP1=OFF
                      00953         CONFIG CPB=OFF,CPD=OFF
                      00954 
                      00955 ;; write protect some blocks (program memory and eeprom)
                      00956         CONFIG WRT0=OFF,WRT1=OFF
                      00957         CONFIG WRTB=OFF,WRTC=OFF,WRTD=OFF
                      00958 
                      00959 ;; following two words protect the various program code blocks from table reads
                      00960         CONFIG EBTR0=OFF,EBTR1=OFF
                      00961         CONFIG EBTRB=OFF
                      00962 
                      00963  #ENDIF
                      00964 
                      00965  #IFDEF __18F4620
                      00966 
                      00967  INCLUDE "p18f4620.inc"
                      00968 
                      00969  #DEFINE PIC18_FAMILY
                      00970 
                      00971  #define OSC_CONFIG_LOCAL OSC=INTIO67
                      00972  #define OSC_CONTROL_LOCAL 0x70
                      00973 
                      00974         CONFIG OSC_CONFIG_LOCAL, FCMEN=OFF,IESO=OFF
                      00975 
                      00976 ;; wdt off, brownout is on and set for second highest voltage (hardware only)
                      00977         CONFIG PWRT=ON, BOREN=NOSLP, BORV=1
                      00978 
                      00979         CONFIG WDT=OFF,WDTPS=1
                      00980 ;; mclre disabled, timer1 cfg fow low power, portb pins are digital, ccp2 mux
                      00981         CONFIG MCLRE=OFF,PBADEN=OFF,CCP2MX=PORTC
                      00982 
                      00983 ;; debug, extended_instruction, low-voltage programming and reset_stack_err clr
                      00984         CONFIG DEBUG=OFF,XINST=OFF,LVP=OFF,STVREN=ON
                      00985 
                      00986 ;; code protect some blocks (program memory and eeprom)
                      00987         CONFIG CP0=OFF,CP1=OFF
                      00988         CONFIG CPB=OFF,CPD=OFF
                      00989 
                      00990 ;; write protect some blocks (program memory and eeprom)
                      00991         CONFIG WRT0=OFF,WRT1=OFF
                      00992         CONFIG WRTB=OFF,WRTC=OFF,WRTD=OFF
                      00993 
                      00994 ;; following two words protect the various program code blocks from table reads
                      00995         CONFIG EBTR0=OFF,EBTR1=OFF
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996         CONFIG EBTRB=OFF
                      00997 
                      00998  #ENDIF
                      00999 
                      01000  #IFDEF __18F4520
                      01001 
                      01002  INCLUDE "p18f4520.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F4520 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01488         LIST
                      01003  #DEFINE PIC18_FAMILY
                      01004 
                      01005  #define OSC_CONFIG_LOCAL OSC=INTIO67
                      01006  #define OSC_CONTROL_LOCAL 0x70
                      01007 
                      01008 
                      01009         CONFIG OSC_CONFIG_LOCAL, FCMEN=OFF,IESO=OFF
                      01010 ;; wdt off, brownout is on and set for second highest voltage (hardware only)
                      01011         CONFIG PWRT=ON, BOREN=NOSLP, BORV=1
                      01012 
                      01013         CONFIG WDT=OFF,WDTPS=1
                      01014 ;; mclre disabled, timer1 cfg fow low power, portb pins are digital, ccp2 mux
                      01015         CONFIG MCLRE=OFF,PBADEN=OFF,CCP2MX=PORTC
                      01016 
                      01017 ;; debug, extended_instruction, low-voltage programming and reset_stack_err clr
                      01018         CONFIG DEBUG=OFF,XINST=OFF,LVP=OFF,STVREN=ON
                      01019 
                      01020 ;; code protect some blocks (program memory and eeprom)
                      01021         CONFIG CP0=OFF,CP1=OFF
                      01022         CONFIG CPB=OFF,CPD=OFF
                      01023 
                      01024 ;; write protect some blocks (program memory and eeprom)
                      01025         CONFIG WRT0=OFF,WRT1=OFF
                      01026         CONFIG WRTB=OFF,WRTC=OFF,WRTD=OFF
                      01027 
                      01028 ;; following two words protect the various program code blocks from table reads
                      01029         CONFIG EBTR0=OFF,EBTR1=OFF
                      01030         CONFIG EBTRB=OFF
                      01031 
                      01032  #ENDIF
                      01033 
                      01034  #IFDEF __18F4525
                      01035 
                      01036  INCLUDE "p18f4525.inc"
                      01037  #DEFINE PIC18_FAMILY
                      01038 
                      01039  #define OSC_CONFIG_LOCAL OSC=INTIO67
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01040  #define OSC_CONTROL_LOCAL 0x70 
                      01041 
                      01042 
                      01043         CONFIG OSC_CONFIG_LOCAL, FCMEN=OFF,IESO=OFF
                      01044 ;; wdt off, brownout is on and set for second highest voltage (hardware only)
                      01045         CONFIG PWRT=ON, BOREN=NOSLP, BORV=1
                      01046 
                      01047         CONFIG WDT=OFF,WDTPS=1
                      01048 ;; mclre disabled, timer1 cfg fow low power, portb pins are digital, ccp2 mux
                      01049         CONFIG MCLRE=OFF,PBADEN=OFF,CCP2MX=PORTC
                      01050 
                      01051 ;; debug, extended_instruction, low-voltage programming and reset_stack_err clr
                      01052         CONFIG DEBUG=OFF,XINST=OFF,LVP=OFF,STVREN=ON
                      01053 
                      01054 ;; code protect some blocks (program memory and eeprom)
                      01055         CONFIG CP0=OFF,CP1=OFF
                      01056         CONFIG CPB=OFF,CPD=OFF
                      01057 
                      01058 ;; write protect some blocks (program memory and eeprom)
                      01059         CONFIG WRT0=OFF,WRT1=OFF
                      01060         CONFIG WRTB=OFF,WRTC=OFF,WRTD=OFF
                      01061 
                      01062 ;; following two words protect the various program code blocks from table reads
                      01063         CONFIG EBTR0=OFF,EBTR1=OFF
                      01064         CONFIG EBTRB=OFF
                      01065 
                      01066  #ENDIF
                      01067         
                      01068    #DEFINE BANK1 0
                      01069    #DEFINE BANK2_TWIDDLE 0
                      01070    #DEFINE BANK3_TWIDDLE 0
                      01071    #DEFINE BANK4_TWIDDLE 0
                      01072 
                      01073 ;; registers 0x6 (6) through 0x39 (57)
                      01074   CBLOCK 0x4
                      01075 
  00000004            01076   zc_noedge_counter
                      01077 
  00000005            01078   rx_char
                      01079 
  00000006            01080   zc_delayline
                      01081 
  00000007            01082   ctr_ckt1, ctr_ckt2, ctr_ckt3, ctr_ckt4
  0000000B            01083   ctr_ckt5, ctr_ckt6, ctr_ckt7, ctr_ckt8
  0000000F            01084   ctr_ckt9, ctr_ckt10, ctr_ckt11, ctr_ckt12
  00000013            01085   ctr_ckt13, ctr_ckt14, ctr_ckt15, ctr_ckt16
  00000017            01086   ctr_ckt17, ctr_ckt18, ctr_ckt19, ctr_ckt20
  0000001B            01087   ctr_ckt21, ctr_ckt22, ctr_ckt23, ctr_ckt24
  0000001F            01088   ctr_ckt25, ctr_ckt26, ctr_ckt27, ctr_ckt28
  00000023            01089   ctr_ckt29, ctr_ckt30, ctr_ckt31, ctr_ckt32
                      01090 
                      01091 ;; event_flag is used for communicating between the ISR and the foreground code
                      01092 ;;   in the inactive state all of the bits are high.  A bit is cleared in the
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01093 ;;   ISR to indicate an event and set in the foreground when that event is
                      01094 ;;   processed.
                      01095 ;;   bit 0 is cleared every 256'th interrupt, used for status LED timeouts and
                      01096 ;;      detecting missing zero-crossing transitions.
                      01097 ;;   bit 1 is cleared on the leading edge of the zero-cross signal.
                      01098 
  00000027            01099   event_flag
                      01100 
                      01101 ;; state_flag is used to hold state info used in the ISR.
                      01102 ;;   bit 0 is the value of the ZC signal on the last timer interrupt
                      01103 ;;   bit 1 is set when ZC goes high (i.e. transition), and is cleared when ZC
                      01104 ;;     goes low.  It goes low (or remains low) if there are no low-high
                      01105 ;;     transitions on the ZC signal.
                      01106 
  00000028            01107   state_flag
                      01108 
  00000029            01109   porta_image, portb_image, portc_image, portd_image, porte_image
  0000002E            01110   ctr_timeslot
                      01111 
  0000002F            01112   zc_tmr_save
                      01113 
                      01114 ;; Variables related to the 'charlie-plexed' status LEDs:
                      01115         
  00000030            01116   LED_map
  00000031            01117   LED_bit_ctr
                      01118         
  00000032            01119   LED_anode_rotator
  00000033            01120   LED_cathode_rotator
  00000034            01121   LED_data_rotator
                      01122 
  00000035            01123     Timeout
  00000036            01124     Timecounter
                      01125 
  00000037            01126   dmxhighbyte:0         ;; DMX
  00000037            01127   our_addr
  00000038            01128   dmxlowbyte:0          ;; DMX  
  00000038            01129   rx_discard_count              ; PJS 4/22/11
  00000039            01130   skiphigh:0            ;; DMX
  00000039            01131   rx_copycount                  ; PJS 4/22/11
  0000003A            01132   skiplow:0                     ;; DMX
  0000003A            01133   rx_flag_extra  ;; bit 0 set if prior character was an ESC.
                      01134 
  0000003B            01135   dmxPayloadCount
  0000003C            01136   smDmxL
  0000003D            01137   smDmxH        ;; 0x3D - only two more variables left
                      01138 
  0000003E            01139   dmxStatusCtr
                      01140 
                      01141   ENDC
                      01142 
                      01143 ;; registers 0x40 (64) through 0x5F (95)
                      01144 
                      01145   CBLOCK 0x40
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01146 
  00000040            01147   slot_id_ckt1, slot_id_ckt2, slot_id_ckt3, slot_id_ckt4
  00000044            01148   slot_id_ckt5, slot_id_ckt6, slot_id_ckt7, slot_id_ckt8        
  00000048            01149   slot_id_ckt9, slot_id_ckt10, slot_id_ckt11, slot_id_ckt12     
  0000004C            01150   slot_id_ckt13, slot_id_ckt14, slot_id_ckt15, slot_id_ckt16    
  00000050            01151   slot_id_ckt17, slot_id_ckt18, slot_id_ckt19, slot_id_ckt20
  00000054            01152   slot_id_ckt21, slot_id_ckt22, slot_id_ckt23, slot_id_ckt24
  00000058            01153   slot_id_ckt25, slot_id_ckt26, slot_id_ckt27, slot_id_ckt28
  0000005C            01154   slot_id_ckt29, slot_id_ckt30, slot_id_ckt31, slot_id_ckt32
                      01155 
                      01156   ENDC
                      01157 
                      01158 
                      01159 ;; Register(s) that are accessed in both the first and second banks.
                      01160 ;; registers 0x70 (112) through 0x78  (120)
                      01161 
                      01162 
                      01163 
                      01164   CBLOCK 0x70
                      01165 
  00000070            01166     _w, _status, LED_TRIS_mask
  00000073            01167     isr_counter
  00000074            01168     heartbeat_countdown
  00000075            01169     frame_err_countdown
  00000076            01170     rxd_countdown
  00000077            01171     zc_countdown
                      01172 
                      01173 
                      01174   ENDC
                      01175 
                      01176 
                      01177 
                      01178 
                      01179 
                      01180 ;; assigned numbers:
                      01181 
                      01182  #define DEFAULT_LINERATE 50
                      01183  #define MAX_LINERATE 70
                      01184 
                      01185 ;; derived numbers:
                      01186 
                      01187 ;; initializer for baudrate generator (based on formula from datasheet)
                      01188 ;;  ********************Do Not Change********************
                      01189 
                      01190 #IFNDEF __18F45K22
                      01191 
                      01192 ;;   #DEFINE BAUD_INIT (CLOCKRATE/BAUDRATE/8 - 1)  ;;64mhz
                      01193    #DEFINE BAUD_INIT (CLOCKRATE/BAUDRATE/4 - 1)  ;;32mhz
                      01194 
                      01195 ;; **************Initializer for cell timer ZC Setup********************
                      01196 
                      01197  #define CELL_RATE ((2*DEFAULT_LINERATE) * 256)
                      01198 
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01199  #define CELL_TMR_INIT (CLOCKRATE/8/CELL_RATE)  ;;32 mhz
                      01200 ;; #define CELL_TMR_INIT (CLOCKRATE/16/CELL_RATE)  ;;64 mhz
                      01201 ;; Number used for range-checking prospective values for the periodic timer
                      01202 ;;    interval.
                      01203  #define MIN_ZC_TIMER ((CLOCKRATE/4)/MAX_LINERATE/256/2)  ;;32mhz
                      01204 ;; #define MIN_ZC_TIMER ((CLOCKRATE/8)/MAX_LINERATE/256/2)  ;;64mhz
                      01205 
                      01206 ;---------------------------------------------------------------------
                      01207 
                      01208 #ENDIF
                      01209 
                      01210 #IFDEF __18F45K22
                      01211 
                      01212    #DEFINE BAUD_INIT (CLOCKRATE/BAUDRATE/8 - 1)  ;;64mhz
                      01213 ;;   #DEFINE BAUD_INIT (CLOCKRATE/BAUDRATE/4 - 1)  ;;32mhz
                      01214 
                      01215 ;; **************Initializer for cell timer ZC Setup********************
                      01216 
                      01217  #define CELL_RATE ((2*DEFAULT_LINERATE) * 256)
                      01218 
                      01219 ;; #define CELL_TMR_INIT (CLOCKRATE/8/CELL_RATE)  ;;32 mhz
                      01220  #define CELL_TMR_INIT (CLOCKRATE/16/CELL_RATE)  ;;64 mhz
                      01221 ;; Number used for range-checking prospective values for the periodic timer
                      01222 ;;    interval.
                      01223 ;; #define MIN_ZC_TIMER ((CLOCKRATE/4)/MAX_LINERATE/256/2)  ;;32mhz
                      01224  #define MIN_ZC_TIMER ((CLOCKRATE/8)/MAX_LINERATE/256/2)  ;;64mhz
                      01225 
                      01226 #ENDIF
                      01227 
                      01228                 
                      01229 
                      01230 
                      01231 #ifdef DMX
                      01232 ; ----------------- dmxread -------     
                      01233 
                      01234 chgDmxState macro newState               
                      01235                 movlw   LOW(newState)
                      01236                 movwf   smDmxL
                      01237                 movlw   HIGH(newState)
                      01238                 movwf   smDmxH
                      01239    endm
                      01240 
                      01241 gotoDmxState macro
                      01242                 movff   smDmxH, PCLATH
                      01243                 movf    smDmxL,W
                      01244                 movwf   PCL
                      01245         endm
                      01246 
                      01247 #endif
                      01248 ;; ---------------------------------------------------------------------------
                      01249 
                      01250 
                      01251  org 0
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000 0000           01252         nop
000002 EF?? F???      01253         goto initialize
                      01254 
                      01255 
                      01256     ORG 8
                      01257 
                      01258         
                      01259 ;; interrupt routine
                      01260 ;; Just the timer interrupt for now...
                      01261 ;; ISR timing.
                      01262 ;;   isr_regular path:  
                      01263 ;;     18 - start of ISR through isr_regular
                      01264 ;;     55 - do_regular through isr_status_LEDs
                      01265 ;;     26 - longest path from isr_status_LEDs to/including the return
                      01266 ;;     99 - total
                      01267 ;;
                      01268 ;;   isr_load_counters path:
                      01269 ;;     22 - start of ISR through isr_load_counters (including ZC lead edge)
                      01270 ;;     36 - isr_load_counters through isr_status_LEDs
                      01271 ;;     41 - longest path from isr_status_LEDs to/including the return
                      01272 ;;     99 - total
                      01273 ;;
                      01274 ;; Requirement for the maximum length of this ISR
                      01275 ;;  These timer interrupts occur once overy 30 uS (120 instructions at 16 MHz).
                      01276 ;;  At 57600 baud there is a character available every 190 uS or so, or once
                      01277 ;;    every 6-1/3 timer interrupts.  It takes about 40 instructions to process
                      01278 ;;    one of these characters, or about 7 instructions per timer interrupt.
                      01279 ;;  So this ISR must be kept under 113 (120 - 7) instructions.
                      01280 ;;
                      01281 ;;  This analysis doesn't account for event handling (which probably doesn't
                      01282 ;;    matter, since uart handling have precedence over event-handling).
                      01283 ;;
000008                01284 Int
                      01285 
                      01286 
000008 929E           01287         bcf     PIR1,TMR2IF     ; reset the interrupt
                      01288                         
00000A 2A73           01289         incf    isr_counter,f   ; update count of interrupts ... used only for
00000C B4D8           01290         btfsc   STATUS,Z        ; LED blinking and charlie-plex state variable
00000E 9027           01291         bcf     event_flag,0    ; create event once every 256'th interrupt
                      01292 
000010 A684           01293         btfss   ZC
000012 6A28           01294         clrf    state_flag
                      01295 
000014 B684           01296         btfsc   ZC              ; ZC set this time? (if not, not leading edge)
000016 B028           01297         btfsc   state_flag,0    ; ZC set last time? (if yes, not leading edge)
000018 EF?? F???      01298         goto    isr_not_zc_lead_edge
                      01299 
                      01300 ;; ZC leading edge
                      01301 
00001C 9227           01302         bcf     event_flag,1    ; ZC leading edge flag for foreground code
00001E 8228           01303         bsf     state_flag,1    ; ZC leading edge for ISR code.
000020 8028           01304         bsf     state_flag,0
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01305         
000022 50D6           01306         movf    TMR0L,w
000024 6E2F           01307         movwf   zc_tmr_save
                      01308 
000026                01309 isr_not_zc_lead_edge:
                      01310 
000026 3E2E           01311         incfsz  ctr_timeslot,f
000028 B228           01312         btfsc   state_flag,1
00002A EF?? F???      01313         goto    isr_load_counters
                      01314 ;;
                      01315 ;; Handle the normal case (selectively turn on dimmer outputs).  This code is
                      01316 ;;   bypassed if ctr_timeslot = 0 OR if state_flag.1 is set.
                      01317 ;;
00002E                01318 isr_regular:
                      01319 
00002E 0E00           01320         movlw   255 & ~(DIMMER_BITMAP_PORTA)
                      01321     #IFDEF PIN2_CH
000030 3E07           01322         incfsz  ctr_ckt1,f
000032 0901           01323         iorlw   1       ; turn off this SSR
                      01324     #ENDIF
                      01325     #IFDEF PIN3_CH
000034 3E08           01326         incfsz  ctr_ckt2,f
000036 0902           01327         iorlw   2       ; turn off this SSR
                      01328     #ENDIF
                      01329     #IFDEF PIN4_CH
000038 3E09           01330         incfsz  ctr_ckt3,f
00003A 0904           01331         iorlw   4       ; turn off this SSR
                      01332     #ENDIF
                      01333     #IFDEF PIN5_CH
00003C 3E0A           01334         incfsz  ctr_ckt4,f
00003E 0908           01335         iorlw   8       ; turn off this SSR
                      01336     #ENDIF
                      01337     #IFDEF PIN6_CH
000040 3E0B           01338         incfsz  ctr_ckt5,f
000042 0910           01339         iorlw   16      ; turn off this SSR
                      01340     #ENDIF
                      01341     #IFDEF PIN7_CH
000044 3E0C           01342         incfsz  ctr_ckt6,f
000046 0920           01343         iorlw   32      ; turn off this SSR
                      01344     #ENDIF
                      01345     #IFDEF PIN14_CH
000048 3E11           01346         incfsz  ctr_ckt11,f
00004A 0940           01347         iorlw   64      ; turn off this SSR
                      01348     #ENDIF
                      01349     #IFDEF PIN13_CH
00004C 3E10           01350         incfsz  ctr_ckt10,f
00004E 0980           01351         iorlw   128     ; turn off this SSR
                      01352     #ENDIF
000050 1629           01353         andwf   porta_image,f
                      01354         
000052 0E00           01355         movlw   255 & ~(DIMMER_BITMAP_PORTB)
                      01356     #IFDEF PIN33_CH
000054 3E1B           01357         incfsz  ctr_ckt21,f
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000056 0901           01358         iorlw   1       ; turn off this SSR
                      01359     #ENDIF
                      01360     #IFDEF PIN34_CH
000058 3E1C           01361         incfsz  ctr_ckt22,f
00005A 0902           01362         iorlw   2       ; turn off this SSR
                      01363     #ENDIF
                      01364     #IFDEF PIN35_CH
00005C 3E1D           01365         incfsz  ctr_ckt23,f
00005E 0904           01366         iorlw   4       ; turn off this SSR
                      01367     #ENDIF
                      01368     #IFDEF PIN36_CH
000060 3E1E           01369         incfsz  ctr_ckt24,f
000062 0908           01370         iorlw   8       ; turn off this SSR
                      01371     #ENDIF
                      01372     #IFDEF PIN37_CH
000064 3E17           01373         incfsz  ctr_ckt17,f
000066 0910           01374         iorlw   16      ; turn off this SSR
                      01375     #ENDIF
                      01376     #IFDEF PIN38_CH
000068 3E18           01377         incfsz  ctr_ckt18,f
00006A 0920           01378         iorlw   32      ; turn off this SSR
                      01379     #ENDIF
                      01380     #IFDEF PIN39_CH
00006C 3E19           01381         incfsz  ctr_ckt19,f
00006E 0940           01382         iorlw   64      ; turn off this SSR
                      01383     #ENDIF
                      01384     #IFDEF PIN40_CH
000070 3E1A           01385         incfsz  ctr_ckt20,f
000072 0980           01386         iorlw   128     ; turn off this SSR
                      01387     #ENDIF
000074 162A           01388         andwf   portb_image,f
                      01389         
000076 0EC0           01390         movlw   255 & ~(DIMMER_BITMAP_PORTC)
                      01391     #IFDEF PIN15_CH
000078 3E12           01392         incfsz  ctr_ckt12,f
00007A 0901           01393         iorlw   1       ; turn off this SSR
                      01394     #ENDIF
                      01395     #IFDEF PIN16_CH
00007C 3E13           01396         incfsz  ctr_ckt13,f
00007E 0902           01397         iorlw   2       ; turn off this SSR
                      01398     #ENDIF
                      01399     #IFDEF PIN17_CH
000080 3E14           01400         incfsz  ctr_ckt14,f
000082 0904           01401         iorlw   4       ; turn off this SSR
                      01402     #ENDIF
                      01403     #IFDEF PIN18_CH
000084 3E15           01404         incfsz  ctr_ckt15,f
000086 0908           01405         iorlw   8       ; turn off this SSR
                      01406     #ENDIF
                      01407     #IFDEF PIN23_CH
000088 3E25           01408         incfsz  ctr_ckt31,f
00008A 0910           01409         iorlw   16      ; turn off this SSR   
                      01410     #ENDIF
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01411     #IFDEF PIN24_CH
00008C 3E26           01412         incfsz  ctr_ckt32,f
00008E 0920           01413         iorlw   32      ; turn off this SSR   
                      01414     #ENDIF
                      01415     #IFDEF PIN25_CH
                      01416         incfsz  ctr_ckt0,f
                      01417         iorlw   64      ; turn off this SSR
                      01418     #ENDIF
                      01419     #IFDEF PIN26_CH
                      01420         incfsz  ctr_ckt0,f
                      01421         iorlw   128     ; turn off this SSR
                      01422     #ENDIF
000090 162B           01423         andwf   portc_image,f
                      01424 
000092 0E02           01425         movlw   255 & ~(DIMMER_BITMAP_PORTD)
                      01426     #IFDEF PIN19_CH
000094 3E16           01427         incfsz  ctr_ckt16,f
000096 0901           01428         iorlw   1       ; turn off this SSR
                      01429     #ENDIF    
                      01430     #IFDEF PIN20_CH
                      01431         incfsz  ctr_ckt0,f
                      01432         iorlw   2       ; turn off this SSR
                      01433     #ENDIF   
                      01434     #IFDEF PIN21_CH
000098 3E23           01435         incfsz  ctr_ckt29,f
00009A 0904           01436         iorlw   4       ; turn off this SSR
                      01437     #ENDIF
                      01438     #IFDEF PIN22_CH
00009C 3E24           01439         incfsz  ctr_ckt30,f
00009E 0908           01440         iorlw   8       ; turn off this SSR   
                      01441     #ENDIF
                      01442     #IFDEF PIN27_CH
0000A0 3E1F           01443         incfsz  ctr_ckt25,f
0000A2 0910           01444         iorlw   16      ; turn off this SSR
                      01445     #ENDIF    
                      01446     #IFDEF PIN28_CH
0000A4 3E20           01447         incfsz  ctr_ckt26,f
0000A6 0920           01448         iorlw   32      ; turn off this SSR
                      01449     #ENDIF
                      01450     #IFDEF PIN29_CH
0000A8 3E21           01451         incfsz  ctr_ckt27,f
0000AA 0940           01452         iorlw   64      ; turn off this SSR
                      01453     #ENDIF
                      01454     #IFDEF PIN30_CH
0000AC 3E22           01455         incfsz  ctr_ckt28,f
0000AE 0980           01456         iorlw   128     ; turn off this SSR
                      01457     #ENDIF
0000B0 162C           01458         andwf   portd_image,f
                      01459 
0000B2 0EF8           01460         movlw   255 & ~(DIMMER_BITMAP_PORTE)
                      01461     #IFDEF PIN8_CH
0000B4 3E0D           01462         incfsz  ctr_ckt7,f
0000B6 0901           01463         iorlw   1       ; turn off this SSR
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01464     #ENDIF
                      01465     #IFDEF PIN9_CH
0000B8 3E0E           01466         incfsz  ctr_ckt8,f
0000BA 0902           01467         iorlw   2       ; turn off this SSR
                      01468     #ENDIF
                      01469     #IFDEF PIN10_CH
0000BC 3E0F           01470         incfsz  ctr_ckt9,f
0000BE 0904           01471         iorlw   4       ; turn off this SSR
                      01472     #ENDIF
0000C0 162D           01473         andwf   porte_image,f
                      01474 
0000C2 5029           01475         movf    porta_image,w
0000C4 0A00           01476         xorlw   (DIMMER_BITMAP_PORTA & ~SINK_MAP_PORTA)
0000C6 6E80           01477         movwf   PORTA
0000C8 0E00           01478         movlw   LOW (~PWM_MAP_PORTA)
0000CA 1229           01479         iorwf   porta_image,f   
                      01480                 
0000CC 502A           01481         movf    portb_image,w
0000CE 0A00           01482         xorlw   (DIMMER_BITMAP_PORTB & ~SINK_MAP_PORTB)
0000D0 6E81           01483         movwf   PORTB
0000D2 0E00           01484         movlw   LOW (~PWM_MAP_PORTB)
0000D4 122A           01485         iorwf   portb_image,f
                      01486 
0000D6 502B           01487         movf    portc_image,w
0000D8 0A00           01488         xorlw   (DIMMER_BITMAP_PORTC & ~SINK_MAP_PORTC)
0000DA 6E82           01489         movwf   PORTC
0000DC 0EC0           01490         movlw   ~PWM_MAP_PORTC
0000DE 122B           01491         iorwf   portc_image,f
                      01492 
0000E0 502C           01493         movf    portd_image,w
0000E2 0A00           01494         xorlw   (DIMMER_BITMAP_PORTD & ~SINK_MAP_PORTD)
0000E4 6E83           01495         movwf   PORTD
0000E6 0E00           01496         movlw   LOW (~PWM_MAP_PORTD)
0000E8 122C           01497         iorwf   portd_image,f
                      01498 
0000EA 502D           01499         movf    porte_image,w
0000EC 0A00           01500         xorlw   (DIMMER_BITMAP_PORTE & ~SINK_MAP_PORTE)
0000EE 6E84           01501         movwf   PORTE
0000F0 0EF8           01502         movlw   ~PWM_MAP_PORTE
0000F2 122D           01503         iorwf   porte_image,f
0000F4 EF?? F???      01504         goto    isr_status_LEDs
                      01505 
                      01506 ;;
                      01507 ;; Initialize the ctr_ckt registers for upcoming half-cycle.  Copy the slot_id
                      01508 ;;   registers to the ctr registers, set output port values according to
                      01509 ;;   whether the dimmer values are 255 or not.
                      01510 ;;
0000F8                01511 isr_load_counters:
0000F8 0E00           01512         movlw   CTR_LOCKOUT
0000FA 6E2E           01513         movwf   ctr_timeslot
                      01514 
0000FC B028           01515         btfsc   state_flag,0
0000FE 6AD6           01516         clrf    TMR0L
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01517 
                      01518     #IFDEF PIN2_CH
000100 5040           01519         movf    slot_id_ckt1,w
000102 6E07           01520         movwf   ctr_ckt1
                      01521     #ENDIF
                      01522 
                      01523     #IFDEF PIN3_CH
000104 5041           01524         movf    slot_id_ckt2,w
000106 6E08           01525         movwf   ctr_ckt2
                      01526     #ENDIF
                      01527                 
                      01528     #IFDEF PIN4_CH
000108 5042           01529         movf    slot_id_ckt3,w
00010A 6E09           01530         movwf   ctr_ckt3
                      01531     #ENDIF
                      01532                 
                      01533     #IFDEF PIN5_CH
00010C 5043           01534         movf    slot_id_ckt4,w
00010E 6E0A           01535         movwf   ctr_ckt4
                      01536     #ENDIF
                      01537                 
                      01538     #IFDEF PIN6_CH
000110 5044           01539         movf    slot_id_ckt5,w
000112 6E0B           01540         movwf   ctr_ckt5
                      01541     #ENDIF
                      01542                 
                      01543     #IFDEF PIN7_CH
000114 5045           01544         movf    slot_id_ckt6,w
000116 6E0C           01545         movwf   ctr_ckt6
                      01546     #ENDIF
                      01547 
                      01548     #IFDEF PIN14_CH
000118 504A           01549         movf    slot_id_ckt11,w
00011A 6E11           01550         movwf   ctr_ckt11
                      01551     #ENDIF
                      01552         
                      01553     #IFDEF PIN13_CH
00011C 5049           01554         movf    slot_id_ckt10,w
00011E 6E10           01555         movwf   ctr_ckt10
                      01556     #ENDIF
                      01557 
                      01558     #IFDEF PIN33_CH
000120 5054           01559         movf    slot_id_ckt21,w
000122 6E1B           01560         movwf   ctr_ckt21
                      01561     #ENDIF
                      01562 
                      01563     #IFDEF PIN34_CH
000124 5055           01564         movf    slot_id_ckt22,w
000126 6E1C           01565         movwf   ctr_ckt22
                      01566     #ENDIF
                      01567                 
                      01568     #IFDEF PIN35_CH
000128 5056           01569         movf    slot_id_ckt23,w
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00012A 6E1D           01570         movwf   ctr_ckt23
                      01571     #ENDIF
                      01572                 
                      01573     #IFDEF PIN36_CH
00012C 5057           01574         movf    slot_id_ckt24,w
00012E 6E1E           01575         movwf   ctr_ckt24
                      01576     #ENDIF
                      01577                 
                      01578     #IFDEF PIN37_CH
000130 5050           01579         movf    slot_id_ckt17,w
000132 6E17           01580         movwf   ctr_ckt17
                      01581     #ENDIF
                      01582                 
                      01583     #IFDEF PIN38_CH
000134 5051           01584         movf    slot_id_ckt18,w
000136 6E18           01585         movwf   ctr_ckt18
                      01586     #ENDIF
                      01587 
                      01588     #IFDEF PIN39_CH
000138 5052           01589         movf    slot_id_ckt19,w
00013A 6E19           01590         movwf   ctr_ckt19
                      01591     #ENDIF
                      01592         
                      01593     #IFDEF PIN40_CH
00013C 5053           01594         movf    slot_id_ckt20,w
00013E 6E1A           01595         movwf   ctr_ckt20
                      01596     #ENDIF
                      01597 
                      01598     #IFDEF PIN15_CH
000140 504B           01599         movf    slot_id_ckt12,w
000142 6E12           01600         movwf   ctr_ckt12
                      01601     #ENDIF
                      01602 
                      01603     #IFDEF PIN16_CH
000144 504C           01604         movf    slot_id_ckt13,w
000146 6E13           01605         movwf   ctr_ckt13
                      01606     #ENDIF
                      01607                 
                      01608     #IFDEF PIN17_CH
000148 504D           01609         movf    slot_id_ckt14,w
00014A 6E14           01610         movwf   ctr_ckt14
                      01611     #ENDIF
                      01612                 
                      01613     #IFDEF PIN18_CH
00014C 504E           01614         movf    slot_id_ckt15,w
00014E 6E15           01615         movwf   ctr_ckt15
                      01616     #ENDIF
                      01617                 
                      01618     #IFDEF PIN23_CH
000150 505E           01619         movf    slot_id_ckt31,w           
000152 6E25           01620         movwf   ctr_ckt31
                      01621     #ENDIF
                      01622                 
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01623     #IFDEF PIN24_CH
000154 505F           01624         movf    slot_id_ckt32,w            
000156 6E26           01625         movwf   ctr_ckt32
                      01626     #ENDIF
                      01627 
                      01628     #IFDEF PIN25_CH
                      01629         movf    slot_id_ckt0,w
                      01630         movwf   ctr_ckt0
                      01631     #ENDIF
                      01632         
                      01633     #IFDEF PIN26_CH
                      01634         movf    slot_id_ckt0,w
                      01635         movwf   ctr_ckt0
                      01636     #ENDIF
                      01637 
                      01638     #IFDEF PIN19_CH
000158 504F           01639         movf    slot_id_ckt16,w
00015A 6E16           01640         movwf   ctr_ckt16
                      01641     #ENDIF
                      01642 
                      01643     #IFDEF PIN20_CH
                      01644         movf    slot_id_ckt0,w
                      01645         movwf   ctr_ckt0
                      01646     #ENDIF
                      01647         
                      01648     #IFDEF PIN21_CH
00015C 505C           01649         movf    slot_id_ckt29,w
00015E 6E23           01650         movwf   ctr_ckt29
                      01651     #ENDIF
                      01652 
                      01653     #IFDEF PIN22_CH
000160 505D           01654         movf    slot_id_ckt30,w            
000162 6E24           01655         movwf   ctr_ckt30
                      01656     #ENDIF
                      01657 
                      01658     #IFDEF PIN27_CH
000164 5058           01659         movf    slot_id_ckt25,w
000166 6E1F           01660         movwf   ctr_ckt25
                      01661     #ENDIF
                      01662                 
                      01663     #IFDEF PIN28_CH
000168 5059           01664         movf    slot_id_ckt26,w
00016A 6E20           01665         movwf   ctr_ckt26
                      01666     #ENDIF
                      01667                 
                      01668     #IFDEF PIN29_CH
00016C 505A           01669         movf    slot_id_ckt27,w
00016E 6E21           01670         movwf   ctr_ckt27
                      01671     #ENDIF
                      01672                 
                      01673     #IFDEF PIN30_CH
000170 505B           01674         movf    slot_id_ckt28,w
000172 6E22           01675         movwf   ctr_ckt28
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01676     #ENDIF
                      01677 
                      01678     #IFDEF PIN8_CH
000174 5046           01679         movf    slot_id_ckt7,w
000176 6E0D           01680         movwf   ctr_ckt7
                      01681     #ENDIF
                      01682 
                      01683     #IFDEF PIN9_CH
000178 5047           01684         movf    slot_id_ckt8,w
00017A 6E0E           01685         movwf   ctr_ckt8
                      01686     #ENDIF
                      01687         
                      01688     #IFDEF PIN10_CH
00017C 5048           01689         movf    slot_id_ckt9,w
00017E 6E0F           01690         movwf   ctr_ckt9
                      01691     #ENDIF
                      01692 
000180 0EFF           01693         movlw   DIMMER_BITMAP_PORTA
000182 1229           01694         iorwf   porta_image,f
000184 5029           01695         movf    porta_image,w
000186 0A00           01696         xorlw   (DIMMER_BITMAP_PORTA & ~SINK_MAP_PORTA)
000188 6E80           01697         movwf   PORTA
                      01698                 
00018A 0EFF           01699         movlw   DIMMER_BITMAP_PORTB
00018C 122A           01700         iorwf   portb_image,f
00018E 502A           01701         movf    portb_image,w
000190 0A00           01702         xorlw   (DIMMER_BITMAP_PORTB & ~SINK_MAP_PORTB)
000192 6E81           01703         movwf   PORTB
                      01704 
000194 0E3F           01705         movlw   DIMMER_BITMAP_PORTC
000196 122B           01706         iorwf   portc_image,f
000198 502B           01707         movf    portc_image,w
00019A 0A00           01708         xorlw   (DIMMER_BITMAP_PORTC & ~SINK_MAP_PORTC)
00019C 6E82           01709         movwf   PORTC
                      01710 
00019E 0EFD           01711         movlw   DIMMER_BITMAP_PORTD
0001A0 122C           01712         iorwf   portd_image,f
0001A2 502C           01713         movf    portd_image,w
0001A4 0A00           01714         xorlw   (DIMMER_BITMAP_PORTD & ~SINK_MAP_PORTD)
0001A6 6E83           01715         movwf   PORTD
                      01716 
0001A8 0E07           01717         movlw   DIMMER_BITMAP_PORTE
0001AA 122D           01718         iorwf   porte_image,f
0001AC 502D           01719         movf    porte_image,w
0001AE 0A00           01720         xorlw   (DIMMER_BITMAP_PORTE & ~SINK_MAP_PORTE)
0001B0 6E84           01721         movwf   PORTE
                      01722 
0001B2                01723 isr_status_LEDs:        
                      01724 
                      01725 ;;
                      01726 ;; Basically divide by 16...
                      01727 ;;
0001B2 A673           01728         btfss   isr_counter,3   ; skip LED work if count >=3 (modulo 16)
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B4 B473           01729         btfsc   isr_counter,2
0001B6 EF?? F???      01730         goto    isr_exit
                      01731 
                      01732 ;; Go through this path once every 16 times around...translates to an LED
                      01733 ;; refresh rate of 200 or 240 Hz.
                      01734 
0001BA                01735 isr_extra_work: 
                      01736 
0001BA B273           01737         btfsc   isr_counter,1
0001BC EF?? F???      01738         goto    isr_extra_work2
                      01739         
0001C0 B073           01740         btfsc   isr_counter,0
0001C2 EF?? F???      01741         goto    isr_extra_work1
                      01742 
                      01743 ;;
                      01744 ;; Turn all of the LEDs OFF before working on the PORTS to prevent ghosting
                      01745 ;;
                      01746 
0001C6 8295           01747         bsf     LED2_TRIS
                      01748 
                      01749         
                      01750 ;;
                      01751 ;; Set one bit in the portx_image register that will apply positive voltage to
                      01752 ;; one of the LED anodes, and make sure that the other bits are low (for the
                      01753 ;; cathodes).
                      01754 ;;
                      01755 
0001C8 BE32           01756         btfsc   LED_anode_rotator,7
                      01757 
                      01758 
                      01759 
0001CA BC32           01760         btfsc   LED_anode_rotator,6
                      01761 
                      01762 
0001CC EF?? F???      01763         goto    isr_exit        ; 20 clocks from , including this instruction
                      01764         
0001D0                01765 isr_extra_work1:
                      01766 ;;
                      01767 ;; now turn on selected LED bits in the portx_image registers
                      01768 ;;
0001D0 922C           01769         bcf     LED2_anode_sel
0001D2 BA32           01770         btfsc   LED_anode_rotator,5
0001D4 822C           01771         bsf     LED2_anode_sel
                      01772 
0001D6 5032           01773         movf    LED_anode_rotator,w
0001D8 1033           01774         iorwf   LED_cathode_rotator,w
                      01775 
0001DA AE34           01776         btfss   LED_data_rotator,7 ; clear the TRIS mask if the LED is OFF
0001DC 0E00           01777         movlw   0x00
                      01778 
0001DE 6E72           01779         movwf   LED_TRIS_mask
                      01780                 
0001E0 EF?? F???      01781         goto    isr_exit        ; 18 clocks, including this instruction
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01782         
0001E4                01783 isr_extra_work2:
0001E4 B073           01784         btfsc   isr_counter,0
0001E6 EF?? F???      01785         goto    isr_extra_work3
                      01786 
                      01787 ;;
                      01788 ;; Now write to the TRIS registers (setting two bits, one for an anode and
                      01789 ;;   one for a cathode).
                      01790 ;;
                      01791 
                      01792         
0001EA BE72           01793         btfsc   LED_TRIS_mask,7
                      01794 
                      01795 
0001EC BC72           01796         btfsc   LED_TRIS_mask,6
                      01797 
                      01798 
0001EE BA72           01799         btfsc   LED_TRIS_mask,5
0001F0 9295           01800         bcf     LED2_TRIS
                      01801 
                      01802 
                      01803         
                      01804 ;; start updating registers for next time around
                      01805         
0001F2 3432           01806         rlcf    LED_anode_rotator,w
0001F4 3632           01807         rlcf    LED_anode_rotator,f
                      01808 
0001F6 EF?? F???      01809         goto    isr_exit        ; 17 instructions, including this one.
                      01810 
0001FA                01811 isr_extra_work3:        
                      01812 ;;
                      01813 ;; Now update registers for next time.
                      01814 ;;
0001FA 3433           01815         rlcf    LED_cathode_rotator,w
0001FC 3633           01816         rlcf    LED_cathode_rotator,f
                      01817 
0001FE 3634           01818         rlcf    LED_data_rotator,f
                      01819         
000200 2E31           01820         decfsz  LED_bit_ctr,f
000202 EF?? F???      01821         goto    isr_exit
                      01822 
000206 8631           01823         bsf     LED_bit_ctr,3
                      01824         
000208 5030           01825         movf    LED_map,w
00020A 6E34           01826         movwf   LED_data_rotator; 13 instructions, including this one.
                      01827 
00020C                01828 isr_exit:
                      01829 
                      01830 
00020C 0011           01831         retfie  FAST
                      01832 
                      01833         
                      01834 ;;
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01835 ;; End of Interrupt Routine, start of Foreground code.
                      01836 ;;
                      01837 
00020E                01838 initialize:
                      01839 ;;
                      01840 ;; initialize some registers
                      01841 ;;
00020E 6A40           01842         clrf    slot_id_ckt1    ; set all 'lamps' to lowest intensity
000210 6A41           01843         clrf    slot_id_ckt2
000212 6A42           01844         clrf    slot_id_ckt3
000214 6A43           01845         clrf    slot_id_ckt4
000216 6A44           01846         clrf    slot_id_ckt5
000218 6A45           01847         clrf    slot_id_ckt6
00021A 6A46           01848         clrf    slot_id_ckt7
00021C 6A47           01849         clrf    slot_id_ckt8
00021E 6A48           01850         clrf    slot_id_ckt9
000220 6A49           01851         clrf    slot_id_ckt10
000222 6A4A           01852         clrf    slot_id_ckt11
000224 6A4B           01853         clrf    slot_id_ckt12
000226 6A4C           01854         clrf    slot_id_ckt13
000228 6A4D           01855         clrf    slot_id_ckt14
00022A 6A4E           01856         clrf    slot_id_ckt15
00022C 6A4F           01857         clrf    slot_id_ckt16
00022E 6A50           01858         clrf    slot_id_ckt17       
000230 6A51           01859         clrf    slot_id_ckt18
000232 6A52           01860         clrf    slot_id_ckt19
000234 6A53           01861         clrf    slot_id_ckt20
000236 6A54           01862         clrf    slot_id_ckt21
000238 6A55           01863         clrf    slot_id_ckt22
00023A 6A56           01864         clrf    slot_id_ckt23
00023C 6A57           01865         clrf    slot_id_ckt24
00023E 6A58           01866         clrf    slot_id_ckt25
000240 6A59           01867         clrf    slot_id_ckt26
000242 6A5A           01868         clrf    slot_id_ckt27
000244 6A5B           01869         clrf    slot_id_ckt28
000246 6A5C           01870         clrf    slot_id_ckt29
000248 6A5D           01871         clrf    slot_id_ckt30
00024A 6A5E           01872         clrf    slot_id_ckt31
00024C 6A5F           01873         clrf    slot_id_ckt32
                      01874 
                      01875         
00024E 6AE9           01876         clrf    FSR0L           ; start out discarding data
000250 6A04           01877         clrf    zc_noedge_counter
                      01878 
000252 6AEA           01879         clrf    FSR0H
                      01880 
000254 6A2E           01881         clrf    ctr_timeslot
000256 6A73           01882         clrf    isr_counter
000258 6A29           01883         clrf    porta_image
00025A 6A2A           01884         clrf    portb_image
00025C 6A2B           01885         clrf    portc_image
00025E 6A2C           01886         clrf    portd_image
000260 6A2D           01887         clrf    porte_image
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01888 
000262 0EFF           01889         movlw   0xFF
000264 6E27           01890         movwf   event_flag      ; no events pending
                      01891 
                      01892 #IFDEF DMX
                      01893 ;-------------------------Timeout addition
                      01894     movlw   0x83
                      01895     movwf   Timecounter
                      01896     movlw   0xFF
                      01897     movwf   Timeout
                      01898 ;-----------------------------
                      01899 
                      01900 #ENDIF
                      01901 
                      01902                 
                      01903 ;; initialize the ports - all outputs 'OFF".
                      01904         
000266 010F           01905         BANKSEL PORTA
000268 0EFF           01906         movlw   DIMMER_BITMAP_PORTA & SINK_MAP_PORTA
00026A 6E80           01907         movwf   PORTA
00026C 0EFF           01908         movlw   DIMMER_BITMAP_PORTB & SINK_MAP_PORTB
00026E 6E81           01909         movwf   PORTB
000270 0E3F           01910         movlw   DIMMER_BITMAP_PORTC & SINK_MAP_PORTC
000272 6E82           01911         movwf   PORTC
000274 0EFD           01912         movlw   DIMMER_BITMAP_PORTD & SINK_MAP_PORTD
000276 6E83           01913         movwf   PORTD
000278 0E07           01914         movlw   DIMMER_BITMAP_PORTE & SINK_MAP_PORTE
00027A 6E84           01915         movwf   PORTE
                      01916 
                      01917 ;; Set up the main oscillator, slightly different between the PIC18F and PIC16F
                      01918 ;;   families.
                      01919 ;;  {PR}        
                      01920 
                      01921 
                      01922  
00027C 0E70           01923         movlw   OSC_CONTROL_LOCAL
00027E 6ED3           01924         movwf   OSCCON
000280 0E40           01925         movlw   OSC_TUNE_LOCAL
000282 6E9B           01926         movwf   OSCTUNE
                      01927 
                      01928 
                      01929 ;; Turn off the analog stuff so that the I/O pins can be used for digital
                      01930 ;;   purposes.  The exact method of doing this will vary from part to part.
                      01931 ;; {PR}
                      01932 
                      01933 
                      01934   #IFDEF __18F45K22
                      01935         BANKSEL ANSELA   ; all A/D pins are digital
                      01936         clrf    ANSELA
                      01937         clrf    ANSELB
                      01938     clrf        ANSELC
                      01939     clrf        ANSELD
                      01940     clrf        ANSELE
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01941   #ENDIF
                      01942 
                      01943   #IFNDEF __18F45K22
000284 0E0F           01944         movlw   (1<<PCFG3) | (1<<PCFG2) | (1<<PCFG1) | (1<<PCFG0)
000286 6EC1           01945         movwf   ADCON1          ; all A/D pins are digital
                      01946   #ENDIF
                      01947 
                      01948 
                      01949 
                      01950 
                      01951 ;; Start out with just the triac control bits programmed for output.  The TxD
                      01952 ;;   pin will become an output when the UART is configured, independent of the
                      01953 ;;   TRIS registers.  All other pins start out as inputs.  The status LED pins
                      01954 ;;   are re-configured from the ISR in accordance with the charlie-plexing
                      01955 ;;   scheme adopted here.
                      01956         
000288 010F           01957         BANKSEL TRISA
00028A 0E00           01958         movlw   255 & ~(DIMMER_BITMAP_PORTA)
00028C 6E92           01959         movwf   TRISA^BANK1     ; triac control bits are output
00028E 0E00           01960         movlw   255 & ~(DIMMER_BITMAP_PORTB)
000290 6E93           01961         movwf   TRISB^BANK1     ; triac control bits are output
000292 0EC0           01962         movlw   255 & ~(DIMMER_BITMAP_PORTC)
000294 6E94           01963         movwf   TRISC^BANK1     ; triac control bits are output
000296 0E02           01964         movlw   255 & ~(DIMMER_BITMAP_PORTD)
000298 6E95           01965         movwf   TRISD^BANK1     ; triac control bits are output
00029A 0EF8           01966         movlw   255 & ~(DIMMER_BITMAP_PORTE)
00029C 6E96           01967         movwf   TRISE^BANK1     ; triac control bits are output
                      01968 
                      01969 ;; Needed on all PIC18F4xxx devices, 
                      01970  #IFNDEF __18F45K22
00029E 0E00           01971     movlw   0<<PSPMODE
0002A0 6E96           01972     movwf       TRISE
                      01973   #ENDIF
                      01974 
                      01975 
                      01976 
0002A2 9ED0           01977         bcf     RCON,IPEN
0002A4 6A9D           01978         clrf    PIE1
0002A6 6AA0           01979         clrf    PIE2
                      01980 
                      01981 ;; Read our address from the EEPROM at the end of this file
                      01982 #ifdef DMX
                      01983   #ifdef HARD_CODE_DMX_ADDR
                      01984                 movlw high DMX_START_ADDRESS
                      01985                 movwf dmxhighbyte
                      01986                 movlw low DMX_START_ADDRESS
                      01987                 movwf dmxlowbyte
                      01988   #else
                      01989                 movlw   LOW(EE_DMX_HIGH)
                      01990                 movwf   EEADR
                      01991                 bcf             EECON1, EEPGD   ; point to adata memory
                      01992                 bcf             EECON1, CFGS    ; Access EEPROM
                      01993                 bsf             EECON1, RD              ; EE read
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01994                 movff   EEDATA, dmxhighbyte     
                      01995 
                      01996                 movlw   LOW(EE_DMX_LOW)
                      01997                 movwf   EEADR
                      01998                 bcf             EECON1, EEPGD   ; point to adata memory
                      01999                 bcf             EECON1, CFGS    ; Access EEPROM
                      02000                 bsf             EECON1, RD              ; EE read
                      02001                 movff   EEDATA, dmxlowbyte
                      02002   #endif
                      02003         chgDmxState smDmxIdle
                      02004 #else
                      02005   #IFDEF START_ADDRESS
                      02006         movlw   0x00
                      02007         movwf   EEADR
                      02008 ;;      movwf   EEADRH  ;;may need to be commented out depending on PIC device
                      02009         movwf   EECON1
                      02010 
                      02011         bsf             EECON1,RD
                      02012         movf    EEDATA,w
                      02013 
                      02014         movwf   our_addr
                      02015 
                      02016         movlw   0x01  ; convert 1-based value from EEPROM into
                      02017         subwf   our_addr,f  ; 0-based value used in rx routine.
                      02018   #ENDIF
                      02019 #endif  
                      02020 ;; configure the UART - same for PIC16F and PIC18F parts.
                      02021 
0002A8 0E89           02022         movlw   BAUD_INIT;
0002AA 010F           02023         BANKSEL SPBRG
0002AC 6EAF           02024         movwf   SPBRG ^ BANK1
                      02025 
0002AE 6AB0           02026     clrf        SPBRGH
0002B0 0E08           02027         movlw   1<<BRG16   
0002B2 6EB8           02028         movwf   BAUDCTL
                      02029 
                      02030 
0002B4 010F           02031         BANKSEL TXSTA
                      02032         
0002B6 0E24           02033         movlw   (1<<TXEN) | (1<<BRGH); ; enable 8-bit transmitter in async mode
                      02034                                 ; (x16 baud divisor)
0002B8 6EAC           02035         movwf   TXSTA ^ BANK1
                      02036 
0002BA 010F           02037         BANKSEL RCSTA   
0002BC 0E90           02038         movlw   (1<<SPEN) | (1<<CREN); ; enable serial port with continuous 8-bit rx
0002BE 6EAB           02039         movwf   RCSTA
                      02040         
                      02041 ;; Set up timer2 for generating periodic interrupts.
                      02042 
0002C0 0E9C           02043         movlw   CELL_TMR_INIT
0002C2 010F           02044         BANKSEL PR2
0002C4 6ECB           02045         movwf   PR2 ^ BANK1
                      02046         
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002C6 0E04           02047         movlw   (1 << TMR2ON)
                      02048 
0002C8 010F           02049         BANKSEL T2CON
0002CA 6ECA           02050         movwf   T2CON
                      02051 
0002CC 010F           02052         BANKSEL PIE1
0002CE 829D           02053         bsf     PIE1 ^ BANK1,TMR2IE
                      02054 
0002D0 010F           02055         BANKSEL PIR1
0002D2 929E           02056         bcf     PIR1,TMR2IF
                      02057         
                      02058 ;; Set up timer0 for timing how long the zero-crossing signal is OFF.
                      02059 
                      02060 
0002D4 0EC7           02061         movlw   1<<TMR0ON | 1<<T08BIT | 1<<T0PS0 | 1<<T0PS1 | 1<<T0PS2
0002D6 6ED5           02062         movwf   T0CON
                      02063 
                      02064 
0002D8 010F           02065         BANKSEL PORTA
                      02066 
0002DA 6AF2           02067         clrf    INTCON
                      02068 
0002DC 6A28           02069         clrf    state_flag
0002DE B684           02070         btfsc   ZC
0002E0 8028           02071         bsf     state_flag,0    ; bit 0 indicates zc is on at the very start
0002E2 B028           02072         btfsc   state_flag,0
0002E4 8030           02073         bsf     ZC_LED
                      02074         
0002E6 0E08           02075         movlw   8
0002E8 6E31           02076         movwf   LED_bit_ctr
                      02077         
0002EA 0E88           02078         movlw   0x88
0002EC 6E32           02079         movwf   LED_anode_rotator
                      02080 
0002EE 0E52           02081         movlw   0x52
0002F0 6E33           02082         movwf   LED_cathode_rotator
                      02083 
0002F2 6A34           02084         clrf    LED_data_rotator; all status LEDs initially off.
0002F4 6A30           02085         clrf    LED_map         ;
                      02086         
0002F6 0EC0           02087         movlw   (1 <<GIE) | (1<<PEIE)
0002F8 6EF2           02088         movwf   INTCON          ; enable interrupts
                      02089 
0002FA 6A06           02090         clrf    zc_delayline
                      02091 
                      02092 ;; Longest serial RX pathlengths through this code (no events processed)
                      02093 ;; 21 instructions - discard state
                      02094 ;; 27 instructions - pure discard state
                      02095 ;; 19 instructions - Sync char (0x7E)
                      02096 ;; 41 instructions - command byte (just after the Sync char).
                      02097 ;; 41 instructions - data byte (not ESC)
                      02098 ;;
                      02099 ;; normal Rx char (data copied to memory)
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002FC                02100 mainloop:
0002FC 3C27           02101         incfsz  event_flag,w    ; check event flags from ISR
0002FE EC?? F???      02102         call    event_processor
                      02103         
                      02104 #ifdef DMX
                      02105 
                      02106 dmxEngine
                      02107  BANKSEL RCSTA
                      02108   btfsc RCSTA,OERR  ; BANK 3 - test for overrun error (rare)
                      02109   goto dmxError
                      02110 
                      02111  BANKSEL PIR1
                      02112   btfss PIR1,RCIF  ; Received a character yet?
                      02113   goto mainloop  ; Nope - jump back
                      02114   gotoDmxState
                      02115 
                      02116 
                      02117 dmxError
                      02118                 bcf             RCSTA,CREN      ; Overrun error
                      02119                 movf    RCREG,w         ; Flush the FIFO
                      02120 
                      02121                 movf    RCREG,w         ; Flush the FIFO
                      02122 
                      02123                 bsf             RCSTA,CREN
                      02124 
                      02125 
                      02126                 ; Fall through
                      02127 smDmxIdle
                      02128         movf    dmxhighbyte,w           ; Skipcounter is used to detmine how many
                      02129         movwf   skiphigh                ; received data bytes are skipped before the RGB
                      02130         movf    dmxlowbyte,w            ; data is collected.  Load skipcounter with
                      02131         movwf   skiplow                 ; the DMX address from above...
                      02132         movf    skiplow,f               ; ... then decrement it by one
                      02133         btfsc   STATUS,Z                ; so we know how many channels to ignore before the
                      02134         decf    skiphigh,f              ; useful data arrives.  We'll see more of the
                      02135         decf    skiplow,f               ; skipcounter a bit farther down the page.
                      02136                 chgDmxState smWait4break
                      02137 
                      02138 
                      02139                 ; Fall through.. an optimization cheat
                      02140 
                      02141 smWait4break
                      02142 
                      02143         BANKSEL RCSTA
                      02144         btfss   RCSTA,FERR               ; Here we're waiting to see if a break occurs
                      02145 
                      02146                 goto    purgeSerial
                      02147 
                      02148 
                      02149 
                      02150 
                      02151 
                      02152                 ; Code to implement 1HZ blinking when DMX is detected
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02153 
                      02154                 decfsz  dmxStatusCtr,f
                      02155 
                      02156                 goto    endBlink
                      02157 
                      02158 
                      02159 
                      02160                 movlw   DMX_BLINK_RATE                  ; Blink every 44 frames = 1Hz
                      02161 
                      02162                 movwf   dmxStatusCtr
                      02163 
                      02164                 movf    ZC_LED_REG,W
                      02165 
                      02166                 xorlw   1<<ZC_LED_BIT
                      02167 
                      02168                 movwf   ZC_LED_REG
                      02169 
                      02170 endBlink
                      02171 
                      02172                 chgDmxState smWait4Start
                      02173 purgeSerial
                      02174 
                      02175         BANKSEL RCREG
                      02176 
                      02177                 movf    RCREG,w                                 ; Purge the incoming Buffer
                      02178 
                      02179                 goto    mainloop
                      02180 
                      02181 
                      02182 smWait4Start
                      02183         BANKSEL RCSTA
                      02184         btfsc   RCSTA,FERR              ; a framing error.  If all is well AND the
                      02185         goto    purgeSerial                     ; new byte is zero (which means the start code
                      02186         movf    RCREG,w                 ; is also zero, it's okay to begin gethering channel
                      02187                                         ; data
                      02188 
                      02189         ; Define target of payload
                      02190 
                      02191 
                      02192 
                      02193                 btfss   STATUS,Z                                ; Check for a ZERO byte
                      02194 
                      02195                 goto    smDmxIdle                               ; Was not a ZERO - start looking again
                      02196 ;--------------------------------Timeout addition ---------------------
                      02197                 movlw   0xFF                    
                      02198                 movwf   Timeout
                      02199 ;----------------------------------------------------------------------
                      02200         BANKSEL FSR0L
                      02201                 movlw   slot_id_ckt1                    ; next state is normal body
                      02202                 movwf   FSR0L                                   ; point to start of slot_id area
                      02203 
                      02204         ; Define PAYLOAD size
                      02205                 movlw   0x20                                    ; 32 bytes of payload
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02206                 movwf   dmxPayloadCount
                      02207                 chgDmxState     smScanDmxData
                      02208 
                      02209         movf    skiphigh,W              ; Here check to see if the highbyte is
                      02210         btfss   STATUS,Z                ; zero. If it is,check to see if the
                      02211         goto    mainloop                    ; lowbyte is 1.  If 1, grab the next 32 bytes
                      02212         movf    skiplow,w               ; which come through.  If <> 1, go to the routine
                      02213         btfss   STATUS,Z                ; which receives and discards bytes until the
                      02214         goto    mainloop                ; DMX address has been reached.
                      02215         chgDmxState smReadDmxPayload
                      02216                 goto    mainloop
                      02217 
                      02218 smScanDmxData
                      02219 
                      02220         BANKSEL RCSTA
                      02221         btfss   RCSTA,FERR              ; Test for a framing error.
                      02222         goto    continueScan            ;
                      02223 
                      02224 
                      02225 
                      02226                 chgDmxState smWait4Start
                      02227 
                      02228                 goto    purgeSerial
                      02229 
                      02230 
                      02231 
                      02232 continueScan
                      02233 
                      02234         BANKSEL RCREG
                      02235         movf    RCREG,w                 ; Then, capture & move to 'w'...
                      02236 
                      02237         movf    skiplow,f               ; ...decrement the skip counter...
                      02238         btfsc   STATUS,Z                ; (all sixteen bits of it)
                      02239         decf    skiphigh,f
                      02240         decf    skiplow,f
                      02241                                         ; ...and see if we've reached the start address.
                      02242         movf    skiplow,W               ; If the skip counter now equals zero, we know
                      02243         btfss   STATUS,Z                ; that we need to gather the next five bytes
                      02244         goto    mainloop                    ; and save them as RGBAW data.  If the counter is
                      02245         movf    skiphigh,W              ; still nonzero, loop back and do it again.
                      02246         btfss   STATUS,Z
                      02247         goto    mainloop
                      02248                 chgDmxState smReadDmxPayload
                      02249                 goto    mainloop
                      02250 
                      02251 smReadDmxPayload
                      02252 
                      02253         BANKSEL RCSTA
                      02254         btfss   RCSTA,FERR              ; Test for a framing error.
                      02255         goto    continuePayload         ;
                      02256 
                      02257 
                      02258                 chgDmxState smWait4Start
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02259 
                      02260                 goto    purgeSerial
                      02261 
                      02262 
                      02263 
                      02264 continuePayload
                      02265 
                      02266         BANKSEL RCREG
                      02267         movf    RCREG,W
                      02268 
                      02269         BANKSEL INDF0
                      02270                 movwf   INDF0                                   ; Copy to the target
                      02271                 incf    FSR0L,f                         ; Increment the target
                      02272                 decf    dmxPayloadCount,F
                      02273                 btfss   STATUS,Z
                      02274                 goto    mainloop
                      02275 
                      02276 smDmxDone
                      02277 
                      02278                 chgDmxState smDmxIdle
                      02279 
                      02280                 goto    mainloop
                      02281 #else
                      02282 
000302 AA9E           02283         btfss   PIR1,RCIF       ; skip if UART has a rx character to process
000304 EF?? F???      02284         goto    mainloop        ; no character available
                      02285 
000308 0E06           02286         movlw   6               ; Rx error mask (framing error, overrun error)
00030A 14AB           02287         andwf   RCSTA,w         ; get (masked) rx status
00030C A4D8           02288         btfss   STATUS,Z
00030E EF?? F???      02289         goto    rx_error        ; goto error routine
                      02290 
000312 50AE           02291         movf    RCREG,w
000314 6E05           02292         movwf   rx_char         ; and save a working copy
                      02293         
000316 0F82           02294         addlw   0x82            ; test for sync character
000318 A4D8           02295         btfss   STATUS,Z        ; skip if sync character
00031A EF?? F???      02296         goto    rx_not_sync     ; jump to code for processing non-sync
                      02297 
                      02298 ;; 
                      02299 ;; process sync character
                      02300 ;;
00031E 6AE9           02301         clrf    FSR0L           ; next byte is command byte, regardless of
000320 8EE9           02302         bsf             FSR0L,7         ; prior state
000322                02303 rx_echo:        
000322 5005           02304         movf    rx_char,w       ; echo most recent character to transmitter
000324 6EAD           02305         movwf   TXREG
000326 EF?? F???      02306         goto    mainloop
                      02307 
00032A                02308 rx_error:
00032A 50AE           02309         movf    RCREG,w
                      02310         
00032C 0E80           02311         movlw   0x80
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02312 
                      02313 #IFNDEF __18F45K22
00032E 6E75           02314         movwf   frame_err_countdown
                      02315 #ENDIF
                      02316 
000330 98AB           02317         bcf     RCSTA,CREN
000332 88AB           02318         bsf     RCSTA,CREN
000334 6AE9           02319         clrf    FSR0L           ; start discarding
000336 EF?? F???      02320         goto    mainloop
                      02321 
                      02322 ;; 
                      02323 ;; process non-sync character
                      02324 ;;
                      02325 
                      02326 ;; rx_state == FSR:
                      02327 ;; 00000000 -> discarding data (startup, just after rx error)
                      02328 ;; 1xxxxxxx -> expecting command/address byte (just after SYNC)
                      02329 ;; 010nnnnn -> process short-form data character
                      02330 ;; 011xxxxx -> echoing data (count was > 0 or after end of local data)
                      02331         
00033A                02332 rx_not_sync:
00033A 0F01           02333         addlw   1               ; test for PAD character - discard if yes
00033C B4D8           02334         btfsc   STATUS,Z
00033E EF?? F???      02335         goto    mainloop
                      02336 
000342 52E9           02337         movf    FSR0L,f 
000344 B4D8           02338         btfsc   STATUS,Z        ; skip if not discard state
000346 EF?? F???      02339         goto    mainloop
00034A BAE9           02340         btfsc   FSR0L,5         ; skip if non-echo state
00034C EF?? F???      02341         goto    rx_echo         ; pure echo
                      02342 ;;
                      02343 ;; handle non-echo, non-SYNC cases
                      02344 ;;
000350 AEE9           02345         btfss   FSR0L,7         ; skip if first character after SYNC
000352 EF?? F???      02346         goto    decode_packet_body
000356                02347 decode_cmd_byte:                ; first character after the SYNC
000356 9EE9           02348         bcf     FSR0L,7         ; no longer on 'first char after SYNC'
000358 8AE9           02349         bsf     FSR0L,5         ; just in case packet is not for us.
00035A AE05           02350         btfss   rx_char,7
00035C EF?? F???      02351         goto    rx_echo         ; long form packet, just echo it.
                      02352 
                      02353   #IFDEF START_ADDRESS
                      02354 
                      02355         movf    our_addr,w
                      02356         subwf   rx_char,f       ; incoming address - 'our_addr'
                      02357 
                      02358         btfsc   rx_char,7       ; bit 7 set after the subtract?  If so, data is
                      02359         goto    rx_echo         ; all for downstream controllers.
                      02360 
                      02361         movlw   0x81
                      02362         addwf   rx_char,w
                      02363         movwf   rx_discard_count; PJS 4/22/11
                      02364         
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02365         movlw   0x80
                      02366         movwf   rx_char
                      02367         movlw   slot_id_ckt1    ; next state is normal body
                      02368         movwf   FSR0L           ; point to start of slot_id area
                      02369         bcf     rx_flag_extra,7 ; most recent char wasn't ESC
                      02370         
                      02371 ;;      incf    rx_char,f       ; commented out be PJS 4/22/11
                      02372         clrf    rx_copycount    ; PJS 4/22/11
                      02373         
                      02374         goto    rx_echo         ; get next character (and echo the '0x80').
                      02375 
                      02376   #ELSE
                      02377 
000360 0605           02378         decf    rx_char,f       ; 
000362 BE05           02379         btfsc   rx_char,7       ; value 0x7F after dec?  If so, it's for us
000364 EF?? F???      02380         goto    rx_echo
                      02381 
000368 0E40           02382         movlw   slot_id_ckt1    ; next state is normal body
00036A 6EE9           02383         movwf   FSR0L           ; point to start of slot_id area
00036C 9E3A           02384         bcf     rx_flag_extra,7 ; most recent char wasn't ESC
                      02385         
00036E 2A05           02386         incf    rx_char,f
                      02387 
000370 EF?? F???      02388         goto    rx_echo         ; get next character (and echo the '0x80').
                      02389 
                      02390   #ENDIF
                      02391 
                      02392 ;;
                      02393 ;; done initializing packet, now handle the data
                      02394 ;;
                      02395 ;; to get here, char was not SYNC, FSR.7 was clear, FSR.5 was clear, FSR NZ
                      02396 ;;
000374                02397 decode_packet_body:
                      02398 
000374 AE3A           02399         btfss   rx_flag_extra,7 ; skip if previous char was ESC
000376 EF?? F???      02400         goto    previous_not_ESC
00037A 0E4E           02401         movlw   0x4E
00037C 2605           02402         addwf   rx_char,f       ; decode the ESC charactor
00037E EF?? F???      02403         goto    after_ESC_decoding
000382                02404 previous_not_ESC:       
000382 8E3A           02405         bsf     rx_flag_extra,7 ; just in case current char is ESC
000384 0E7F           02406         movlw   0x7F
000386 1805           02407         xorwf   rx_char,w       ; check for ESC
000388 B4D8           02408         btfsc   STATUS,Z        ; skip if not ESC
00038A EF?? F???      02409         goto    mainloop        ; go and discard the ESC
00038E                02410 after_ESC_decoding:
00038E 9E3A           02411         bcf     rx_flag_extra,7 ; normal data state
                      02412 
                      02413   #IFDEF START_ADDRESS
                      02414 
                      02415         movf    rx_discard_count,f ; PJS 4/22/11  
                      02416         btfss   STATUS,Z        ; PJS 4/22/11
                      02417         goto    rx_upfront_discard ; PJS 4/22/11
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02418         
                      02419         movlw   0x80            ; reset countdown flag to max value.
                      02420 #IFNDEF __18F45K22
                      02421         movwf   rxd_countdown
                      02422 #ENDIF
                      02423 
                      02424         movf    rx_char,w       ; copy data to memory..
                      02425         movwf   INDF0
                      02426         incf    FSR0L,f
                      02427 
                      02428         goto    mainloop        ; no echo !
                      02429 
                      02430 ; PJS 4/22/11 :         
                      02431 ;; logic for discarding/ignoring bytes until the place indicated by the
                      02432 ;; start address is reached.
                      02433         
                      02434 rx_upfront_discard:             ; PJS 4/22/11
                      02435         incf    rx_copycount,f  ; PJS 4/22/11
                      02436         btfsc   rx_copycount,3  ; PJS 4/22/11
                      02437         incf    rx_discard_count,f      ; PJS 4/22/11
                      02438         bcf     rx_copycount,3  ; PJS 4/22/11
                      02439 
                      02440         goto    mainloop        ; PJS 4/22/11
                      02441 
                      02442   #ELSE
                      02443 
000390 0E80           02444         movlw   0x80            ; reset countdown flag to max value.
                      02445 
                      02446   #IFDEF __18F4520
                      02447 
000392 6E76           02448         movwf   rxd_countdown
                      02449 
                      02450   #ENDIF
                      02451 
                      02452 
000394 5005           02453         movf    rx_char,w       ; copy data to memory..
000396 6EEF           02454         movwf   INDF0
000398 2AE9           02455         incf    FSR0L,f
                      02456 
00039A EF?? F???      02457         goto    mainloop        ; no echo ! 
                      02458 
                      02459   #ENDIF        
                      02460 ;;
                      02461 #endif ;; RENARD protocol       
                      02462 ;; do all work associated with zero-crossing (ac line frequency detection)
                      02463 ;;
                      02464 ;; event_flag bit assignments
                      02465 ;; bit 0 - clear if interrupt counter incremented through 0
                      02466 ;; bit 1 - clear if rising edge on ZC was detected.
                      02467 
00039E                02468 event_processor:
                      02469 
00039E B027           02470         btfsc   event_flag,0    ; bit 0 is clear if 256 interrupts have occured
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A0 EF?? F???      02471         goto    end_timer_events
                      02472 
                      02473 #IFDEF DMX
                      02474 ;-----------------------Timeout addition ----------------------------
                      02475 #DEFINE Lights_out
                      02476 
                      02477 #ifdef Lights_out
                      02478 
                      02479     decf    Timecounter,F
                      02480     btfsc   STATUS,Z
                      02481     goto    NormalCode
                      02482     movlw   0x83
                      02483     movwf   Timecounter
                      02484 
                      02485     decf    Timeout,F
                      02486     btfsc   STATUS,Z
                      02487     goto    clearData
                      02488     goto    NormalCode
                      02489 clearData:
                      02490     movlw   0xFF
                      02491     movwf   Timeout
                      02492 ;       We need to clear out all the data values
                      02493         BANKSEL slot_id_ckt1
                      02494         clrf    slot_id_ckt1    ; set all 'lamps' to lowest intensity
                      02495         clrf    slot_id_ckt2
                      02496         clrf    slot_id_ckt3
                      02497         clrf    slot_id_ckt4
                      02498         clrf    slot_id_ckt5
                      02499         clrf    slot_id_ckt6
                      02500         clrf    slot_id_ckt7
                      02501         clrf    slot_id_ckt8
                      02502         clrf    slot_id_ckt9
                      02503         clrf    slot_id_ckt10
                      02504         clrf    slot_id_ckt11
                      02505         clrf    slot_id_ckt12
                      02506         clrf    slot_id_ckt13
                      02507         clrf    slot_id_ckt14
                      02508         clrf    slot_id_ckt15
                      02509         clrf    slot_id_ckt16
                      02510     clrf        slot_id_ckt17
                      02511         clrf    slot_id_ckt18
                      02512         clrf    slot_id_ckt19
                      02513         clrf    slot_id_ckt20
                      02514         clrf    slot_id_ckt21
                      02515         clrf    slot_id_ckt22
                      02516         clrf    slot_id_ckt23
                      02517         clrf    slot_id_ckt24
                      02518         clrf    slot_id_ckt25
                      02519         clrf    slot_id_ckt26
                      02520         clrf    slot_id_ckt27
                      02521         clrf    slot_id_ckt28
                      02522         clrf    slot_id_ckt29
                      02523         clrf    slot_id_ckt30
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02524         clrf    slot_id_ckt31
                      02525         clrf    slot_id_ckt32
                      02526 
                      02527 #endif
                      02528 
                      02529 ;---------------------------------------------------------------
                      02530 NormalCode:
                      02531 
                      02532 #ENDIF
                      02533 
                      02534 ;; 256 timer interrupts have occurred
                      02535 
0003A4 8027           02536         bsf     event_flag,0
                      02537 
                      02538 ; count down to determine when to toggle the heartbeat LED
                      02539 
                      02540 
0003A6 0674           02541         decf    heartbeat_countdown,f
0003A8 B4D8           02542         btfsc   STATUS,Z
0003AA 1A30           02543         xorwf   HEARTBEAT_LED_REG,f
                      02544         
                      02545 ; count down to determine when to turn off the RxD LED.
                      02546 
                      02547 #IFNDEF __18F45K22
                      02548 
0003AC 0676           02549         decf    rxd_countdown,f
0003AE B4D8           02550         btfsc   STATUS,Z
                      02551 
                      02552         
                      02553 ; count down to determine when to turn off the Framing Error LED
                      02554         
0003B0 0675           02555         decf    frame_err_countdown,f
0003B2 B4D8           02556         btfsc   STATUS,Z
                      02557 #ENDIF
                      02558 
                      02559 ; count down to detect missing ZC edges
                      02560 
0003B4 2E04           02561         decfsz  zc_noedge_counter,f
0003B6 EF?? F???      02562         goto    end_timer_events
                      02563 
0003BA 9030           02564         bcf     ZC_LED          ; approximately 16 missing ZC pulses, so set ZC
0003BC B684           02565         btfsc   ZC              ; LED to reflect the current state of the ZC.
0003BE 8030           02566         bsf     ZC_LED
                      02567 
0003C0 8804           02568         bsf     zc_noedge_counter,4
                      02569 
0003C2                02570 end_timer_events:
0003C2 B227           02571         btfsc   event_flag,1    ; ZC rising edge detected?
0003C4 0012           02572         return          ;
                      02573 
                      02574 ;;
                      02575 ;; The following code is only executed on the rising edge of ZC.  It is never
                      02576 ;;   executed if ZC is permanently high or low (i.e. DC application).
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02577 ;;
0003C6 8227           02578         bsf     event_flag,1
                      02579         
0003C8 0E01           02580         movlw   1<<ZC_LED_BIT   ; select zero-crossing bit.
                      02581 
0003CA 0677           02582         decf    zc_countdown,f  ; flip the zc LED once every 256 times.
                      02583 
0003CC B4D8           02584         btfsc   STATUS,Z
0003CE 1A30           02585         xorwf   ZC_LED_REG,f    ; toggle the zc LED if countdown expired
                      02586 
0003D0 0E10           02587         movlw   16              ; reset the counter looking for missing edges
0003D2 6E04           02588         movwf   zc_noedge_counter
                      02589         
                      02590 ; update the periodic interrupt limit (to adjust for differing AC frequencies).
                      02591 
0003D4 502F           02592         movf    zc_tmr_save,w
0003D6 08DF           02593         sublw   MIN_ZC_TIMER    ; MIN_ZC_TIMER - zc_tmr_save 
                      02594 
0003D8 B0D8           02595         btfsc   STATUS,C        ; CY set means no borrow, so zc_tmr_save is
0003DA 0012           02596         return                  ; too small ... so return without updating PR2
                      02597 
0003DC 042F           02598         decf    zc_tmr_save,w   ; update PR2 (and clear TMR2 if past PR2)
                      02599         
0003DE 9EF2           02600         bcf     INTCON,GIE
                      02601 
0003E0 010F           02602         BANKSEL PR2
0003E2 6ECB           02603         movwf   PR2 ^ BANK1     ; save new PR2 value
0003E4 010F           02604         BANKSEL TMR2
0003E6 5CCC           02605         subwf   TMR2,w          ; TMR2 - PR2 
0003E8 B0D8           02606         btfsc   STATUS,C        ; CY set means no borrow -> TMR2 >= PR2
0003EA 6ACC           02607         clrf    TMR2            ; reset TMR2 because it's over the limit
                      02608         
0003EC 8EF2           02609         bsf     INTCON,GIE
0003EE                02610 zc_filter_restart_timer:
0003EE 0012           02611         return
                      02612 
                      02613   #IFDEF START_ADDRESS
                      02614 
                      02615         ORG 0xF00000
                      02616         de 2+START_ADDR
                      02617 
                      02618   #ENDIF
                      02619 
                      02620   #IFDEF DMX_START_ADDRESS
                      02621 
                      02622         ORG 0xF00000
                      02623         de HIGH(DMX_START_ADDRESS),LOW(DMX_START_ADDRESS)
                      02624         de 0xDE,0xAD,0xC0,0xDE
                      02625 
                      02626   #ENDIF
                      02627 
                      02628   
                      02629   
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02630 
                      02631         END
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000002
AN9                               00000003
BANK1                             0
BANK2_TWIDDLE                     0
BANK3_TWIDDLE                     0
BANK4_TWIDDLE                     0
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BAUDRATE                          57600
BAUD_INIT                         (CLOCKRATE/BAUDRATE/4 - 1)
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CELL_RATE                         ((2*DEFAULT_LINERATE) * 256)
CELL_TMR_INIT                     (CLOCKRATE/8/CELL_RATE)
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLOCKRATE                         32000000
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CREN                              00000004
CS                                00000002
CSRC                              00000007
CTR_LOCKOUT                       0
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEFAULT_LINERATE                  50
DIMMER_BITMAP_PORTA               (PIN2_DIMMER | PIN3_DIMMER | PIN4_DIMMER | PIN5_DIMMER | PIN6_DIMMER | PIN7_DIMMER | PIN14_DIMMER 
                            | PIN13_DIMMER)
DIMMER_BITMAP_PORTB               (PIN33_DIMMER | PIN34_DIMMER | PIN35_DIMMER | PIN36_DIMMER | PIN37_DIMMER | PIN38_DIMMER | PIN39_D
                            IMMER | PIN40_DIMMER)
DIMMER_BITMAP_PORTC               (PIN15_DIMMER | PIN16_DIMMER | PIN17_DIMMER | PIN18_DIMMER | PIN23_DIMMER | PIN24_DIMMER | PIN25_D
                            IMMER | PIN26_DIMMER)
DIMMER_BITMAP_PORTD               (PIN19_DIMMER | PIN20_DIMMER | PIN21_DIMMER | PIN22_DIMMER | PIN27_DIMMER | PIN28_DIMMER | PIN29_D
                            IMMER | PIN30_DIMMER)
DIMMER_BITMAP_PORTE               (PIN8_DIMMER | PIN9_DIMMER | PIN10_DIMMER)
DMX_BLINK_RATE                    (44)
DONE                              00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
FAST                              00000001
FERR                              00000002
FLT0                              00000000
FLTS                              00000002
FRAME_ERR_LED                     FRAME_ERR_LED_REG, FRAME_ERR_LED_BIT
FRAME_ERR_LED_REG                 LED_map
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HEARTBEAT_LED                     HEARTBEAT_LED_REG, HEARTBEAT_LED_BIT
HEARTBEAT_LED_REG                 LED_map
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
Int                               00000008
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LED2_TRIS                         TRISD,1
LED2_anode_sel                    portd_image,1
LED_TRIS_mask                     00000072
LED_anode_rotator                 00000032
LED_bit_ctr                       00000031
LED_cathode_rotator               00000033
LED_data_rotator                  00000034
LED_map                           00000030
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAX_LINERATE                      70
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

MCLR                              00000003
MIN_ZC_TIMER                      ((CLOCKRATE/4)/MAX_LINERATE/256/2)
N                                 00000004
NO                                0
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_CONFIG_LOCAL                  OSC=INTIO67
OSC_CONTROL_LOCAL                 0x70
OSC_TUNE_LOCAL                    1<<PLLEN
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIC18_FAMILY                      
PIE1                              00000F9D
PIE2                              00000FA0
PIN10_CH                          9
PIN10_DIMMER                      (1<<2)
PIN10_PWM                         YES
PIN10_SINK                        YES
PIN13_CH                          10
PIN13_DIMMER                      (1<<7)
PIN13_PWM                         YES
PIN13_SINK                        YES
PIN14_CH                          11
PIN14_DIMMER                      (1<<6)
PIN14_PWM                         YES
PIN14_SINK                        YES
PIN15_CH                          12
PIN15_DIMMER                      (1<<0)
PIN15_PWM                         YES
PIN15_SINK                        YES
PIN16_CH                          13
PIN16_DIMMER                      (1<<1)
PIN16_PWM                         YES
PIN16_SINK                        YES
PIN17_CH                          14
PIN17_DIMMER                      (1<<2)
PIN17_PWM                         YES
PIN17_SINK                        YES
PIN18_CH                          15
PIN18_DIMMER                      (1<<3)
PIN18_PWM                         YES
PIN18_SINK                        YES
PIN19_CH                          16
PIN19_DIMMER                      (1<<0)
PIN19_PWM                         YES
PIN19_SINK                        YES
PIN20_DIMMER                      0
PIN20_PWM                         YES
PIN20_SINK                        NO
PIN21_CH                          29
PIN21_DIMMER                      (1<<2)
PIN21_PWM                         YES
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PIN21_SINK                        YES
PIN22_CH                          30
PIN22_DIMMER                      (1<<3)
PIN22_PWM                         YES
PIN22_SINK                        YES
PIN23_CH                          31
PIN23_DIMMER                      (1<<4)
PIN23_PWM                         YES
PIN23_SINK                        YES
PIN24_CH                          32
PIN24_DIMMER                      (1<<5)
PIN24_PWM                         YES
PIN24_SINK                        YES
PIN25_DIMMER                      0
PIN25_SINK                        NO
PIN26_DIMMER                      0
PIN26_SINK                        NO
PIN27_CH                          25
PIN27_DIMMER                      (1<<4)
PIN27_PWM                         YES
PIN27_SINK                        YES
PIN28_CH                          26
PIN28_DIMMER                      (1<<5)
PIN28_PWM                         YES
PIN28_SINK                        YES
PIN29_CH                          27
PIN29_DIMMER                      (1<<6)
PIN29_PWM                         YES
PIN29_SINK                        YES
PIN2_CH                           1
PIN2_DIMMER                       (1<<0)
PIN2_PWM                          YES
PIN2_SINK                         YES
PIN30_CH                          28
PIN30_DIMMER                      (1<<7)
PIN30_PWM                         YES
PIN30_SINK                        YES
PIN33_CH                          21
PIN33_DIMMER                      (1<<0)
PIN33_PWM                         YES
PIN33_SINK                        YES
PIN34_CH                          22
PIN34_DIMMER                      (1<<1)
PIN34_PWM                         YES
PIN34_SINK                        YES
PIN35_CH                          23
PIN35_DIMMER                      (1<<2)
PIN35_PWM                         YES
PIN35_SINK                        YES
PIN36_CH                          24
PIN36_DIMMER                      (1<<3)
PIN36_PWM                         YES
PIN36_SINK                        YES
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PIN37_CH                          17
PIN37_DIMMER                      (1<<4)
PIN37_PWM                         YES
PIN37_SINK                        YES
PIN38_CH                          18
PIN38_DIMMER                      (1<<5)
PIN38_PWM                         YES
PIN38_SINK                        YES
PIN39_CH                          19
PIN39_DIMMER                      (1<<6)
PIN39_PWM                         YES
PIN39_SINK                        YES
PIN3_CH                           2
PIN3_DIMMER                       (1<<1)
PIN3_PWM                          YES
PIN3_SINK                         YES
PIN40_CH                          20
PIN40_DIMMER                      (1<<7)
PIN40_PWM                         YES
PIN40_SINK                        YES
PIN4_CH                           3
PIN4_DIMMER                       (1<<2)
PIN4_PWM                          YES
PIN4_SINK                         YES
PIN5_CH                           4
PIN5_DIMMER                       (1<<3)
PIN5_PWM                          YES
PIN5_SINK                         YES
PIN6_CH                           5
PIN6_DIMMER                       (1<<4)
PIN6_PWM                          YES
PIN6_SINK                         YES
PIN7_CH                           6
PIN7_DIMMER                       (1<<5)
PIN7_PWM                          YES
PIN7_SINK                         YES
PIN8_CH                           7
PIN8_DIMMER                       (1<<0)
PIN8_PWM                          YES
PIN8_SINK                         YES
PIN9_CH                           8
PIN9_DIMMER                       (1<<1)
PIN9_PWM                          YES
PIN9_SINK                         YES
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
PWM_MAP_PORTA                     ((((((((PIN14_PWM*2+PIN13_PWM)*2+PIN7_PWM)*2+PIN6_PWM)*2+PIN5_PWM)*2+PIN4_PWM)*2+PIN3_PWM)*2+PIN2_
                            PWM))
PWM_MAP_PORTB                     ((((((((PIN40_PWM*2+PIN39_PWM)*2+PIN38_PWM)*2+PIN37_PWM)*2+PIN36_PWM)*2+PIN35_PWM)*2+PIN34_PWM)*2+
                            PIN33_PWM))
PWM_MAP_PORTC                     ((((((PIN24_PWM*2+PIN23_PWM)*2+PIN18_PWM)*2+PIN17_PWM)*2+PIN16_PWM)*2+PIN15_PWM))
PWM_MAP_PORTD                     ((((((((PIN30_PWM*2+PIN29_PWM)*2+PIN28_PWM)*2+PIN27_PWM)*2+PIN22_PWM)*2+PIN21_PWM)*2+PIN20_PWM)*2+
                            PIN19_PWM))
PWM_MAP_PORTE                     (((PIN10_PWM*2+PIN9_PWM)*2+PIN8_PWM))
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
RXD_LED                           RXD_LED_REG, RXD_LED_BIT
RXD_LED_REG                       LED_map
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SINK_MAP_PORTA                    (((((((PIN14_SINK * 2 + PIN13_SINK) * 2 + PIN7_SINK) * 2 + PIN6_SINK) * 2 + PIN5_SINK) * 2 + PIN4_
                            SINK) * 2 + PIN3_SINK) * 2 + PIN2_SINK)
SINK_MAP_PORTB                    (((((((PIN40_SINK * 2 + PIN39_SINK) * 2 + PIN38_SINK) * 2 + PIN37_SINK) * 2 + PIN36_SINK) * 2 + PI
                            N35_SINK) * 2 + PIN34_SINK) * 2 + PIN33_SINK)
SINK_MAP_PORTC                    (((((((PIN26_SINK * 2 + PIN25_SINK) * 2 + PIN24_SINK) * 2 + PIN23_SINK) * 2 + PIN18_SINK) * 2 + PI
                            N17_SINK) * 2 + PIN16_SINK) * 2 + PIN15_SINK)
SINK_MAP_PORTD                    (((((((PIN30_SINK * 2 + PIN29_SINK) * 2 + PIN28_SINK) * 2 + PIN27_SINK) * 2 + PIN22_SINK) * 2 + PI
                            N21_SINK) * 2 + PIN20_SINK) * 2 + PIN19_SINK)
SINK_MAP_PORTE                    ((PIN10_SINK * 2 + PIN9_SINK) * 2 + PIN8_SINK)
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIAC_OR_SSR_LIGHTS               
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
Timecounter                       00000036
Timeout                           00000035
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YES                               1
Z                                 00000002
ZC                                ZC_REG,(ZC_BIT)
ZC_BIT                            3
ZC_LED                            ZC_LED_REG,ZC_LED_BIT
ZC_LED_BIT                        0
ZC_LED_REG                        LED_map
ZC_MASK                           (1<<(ZC_BIT))
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

ZC_REG                            PORTE
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4520                         00000001
__DEBUG                           1
_status                           00000071
_w                                00000070
after_ESC_decoding                0000038E
ctr_ckt1                          00000007
ctr_ckt10                         00000010
ctr_ckt11                         00000011
ctr_ckt12                         00000012
ctr_ckt13                         00000013
ctr_ckt14                         00000014
ctr_ckt15                         00000015
ctr_ckt16                         00000016
ctr_ckt17                         00000017
ctr_ckt18                         00000018
ctr_ckt19                         00000019
ctr_ckt2                          00000008
ctr_ckt20                         0000001A
ctr_ckt21                         0000001B
ctr_ckt22                         0000001C
ctr_ckt23                         0000001D
ctr_ckt24                         0000001E
ctr_ckt25                         0000001F
ctr_ckt26                         00000020
ctr_ckt27                         00000021
ctr_ckt28                         00000022
ctr_ckt29                         00000023
ctr_ckt3                          00000009
ctr_ckt30                         00000024
ctr_ckt31                         00000025
ctr_ckt32                         00000026
ctr_ckt4                          0000000A
ctr_ckt5                          0000000B
ctr_ckt6                          0000000C
ctr_ckt7                          0000000D
ctr_ckt8                          0000000E
ctr_ckt9                          0000000F
ctr_timeslot                      0000002E
decode_cmd_byte                   00000356
decode_packet_body                00000374
dmxPayloadCount                   0000003B
dmxStatusCtr                      0000003E
dmxhighbyte                       00000037
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

dmxlowbyte                        00000038
end_timer_events                  000003C2
event_flag                        00000027
event_processor                   0000039E
frame_err_countdown               00000075
heartbeat_countdown               00000074
initialize                        0000020E
isr_counter                       00000073
isr_exit                          0000020C
isr_extra_work                    000001BA
isr_extra_work1                   000001D0
isr_extra_work2                   000001E4
isr_extra_work3                   000001FA
isr_load_counters                 000000F8
isr_not_zc_lead_edge              00000026
isr_regular                       0000002E
isr_status_LEDs                   000001B2
mainloop                          000002FC
our_addr                          00000037
porta_image                       00000029
portb_image                       0000002A
portc_image                       0000002B
portd_image                       0000002C
porte_image                       0000002D
previous_not_ESC                  00000382
rx_char                           00000005
rx_copycount                      00000039
rx_discard_count                  00000038
rx_echo                           00000322
rx_error                          0000032A
rx_flag_extra                     0000003A
rx_not_sync                       0000033A
rxd_countdown                     00000076
skiphigh                          00000039
skiplow                           0000003A
slot_id_ckt1                      00000040
slot_id_ckt10                     00000049
slot_id_ckt11                     0000004A
slot_id_ckt12                     0000004B
slot_id_ckt13                     0000004C
slot_id_ckt14                     0000004D
slot_id_ckt15                     0000004E
slot_id_ckt16                     0000004F
slot_id_ckt17                     00000050
slot_id_ckt18                     00000051
slot_id_ckt19                     00000052
slot_id_ckt2                      00000041
slot_id_ckt20                     00000053
slot_id_ckt21                     00000054
slot_id_ckt22                     00000055
slot_id_ckt23                     00000056
slot_id_ckt24                     00000057
slot_id_ckt25                     00000058
MPASM  5.51                 RP32DMXRENARD.ASM   9-4-2016  9:25:51         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

slot_id_ckt26                     00000059
slot_id_ckt27                     0000005A
slot_id_ckt28                     0000005B
slot_id_ckt29                     0000005C
slot_id_ckt3                      00000042
slot_id_ckt30                     0000005D
slot_id_ckt31                     0000005E
slot_id_ckt32                     0000005F
slot_id_ckt4                      00000043
slot_id_ckt5                      00000044
slot_id_ckt6                      00000045
slot_id_ckt7                      00000046
slot_id_ckt8                      00000047
slot_id_ckt9                      00000048
smDmxH                            0000003D
smDmxL                            0000003C
state_flag                        00000028
zc_countdown                      00000077
zc_delayline                      00000006
zc_filter_restart_timer           000003EE
zc_noedge_counter                 00000004
zc_tmr_save                       0000002F

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

